
TestI2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fc2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004e  00800060  00000fc2  00001056  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  008000ae  008000ae  000010a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000150  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000107a  00000000  00000000  00001250  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000072b  00000000  00000000  000022ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008c2  00000000  00000000  000029f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000268  00000000  00000000  000032b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000488  00000000  00000000  00003520  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000598  00000000  00000000  000039a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00003f40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ec       	ldi	r30, 0xC2	; 194
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 3a       	cpi	r26, 0xAE	; 174
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae ea       	ldi	r26, 0xAE	; 174
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 3b       	cpi	r26, 0xB8	; 184
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  8a:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <MyI2CEEPROM_test>:

#define BAUDRATE 9600
#define BAUD_PRESCALE  (((F_CPU / (BAUDRATE * 16UL))) - 1)
#define UNIT_TIME_TICK_NS 62.5

uint8_t MyI2CEEPROM_test(uint8_t addr, uint8_t data) {
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	c8 2f       	mov	r28, r24
  98:	d6 2f       	mov	r29, r22
	MyI2CEEPROM_init();
  9a:	0e 94 11 02 	call	0x422	; 0x422 <MyI2CEEPROM_init>
	MyI2CEEPROM_write_byte(addr, 0x7f, 0xff, data);
  9e:	2d 2f       	mov	r18, r29
  a0:	4f ef       	ldi	r20, 0xFF	; 255
  a2:	6f e7       	ldi	r22, 0x7F	; 127
  a4:	8c 2f       	mov	r24, r28
  a6:	0e 94 14 02 	call	0x428	; 0x428 <MyI2CEEPROM_write_byte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	8f e3       	ldi	r24, 0x3F	; 63
  ac:	9c e9       	ldi	r25, 0x9C	; 156
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <MyI2CEEPROM_test+0x1c>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <MyI2CEEPROM_test+0x22>
  b4:	00 00       	nop
	_delay_ms(10);
	uint8_t ret = MyI2CEEPROM_read_byte(addr, 0x7f, 0xff);
  b6:	4f ef       	ldi	r20, 0xFF	; 255
  b8:	6f e7       	ldi	r22, 0x7F	; 127
  ba:	8c 2f       	mov	r24, r28
  bc:	0e 94 31 02 	call	0x462	; 0x462 <MyI2CEEPROM_read_byte>
	return ret;
}
  c0:	df 91       	pop	r29
  c2:	cf 91       	pop	r28
  c4:	08 95       	ret

000000c6 <main>:

int main(void)
{
	LCD_init(&PORTA);
  c6:	8b e3       	ldi	r24, 0x3B	; 59
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	0e 94 9e 01 	call	0x33c	; 0x33c <LCD_init>
	LCD_gotoxy(1,1);
  ce:	61 e0       	ldi	r22, 0x01	; 1
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_gotoxy>
	LCD_print_string("AVR OK");
  d6:	86 e6       	ldi	r24, 0x66	; 102
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
	UART_init(BAUD_PRESCALE);
  de:	87 e6       	ldi	r24, 0x67	; 103
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 26 01 	call	0x24c	; 0x24c <UART_init>
	LCD_gotoxy(1,2);
  e6:	62 e0       	ldi	r22, 0x02	; 2
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LCD_gotoxy>
	LCD_print_string("EEPROM Test:");
  ee:	8d e6       	ldi	r24, 0x6D	; 109
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
	UART_print_line("EEPROM Test\n");
  f6:	8a e7       	ldi	r24, 0x7A	; 122
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 31 01 	call	0x262	; 0x262 <UART_print_line>
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	83 ed       	ldi	r24, 0xD3	; 211
 102:	90 e3       	ldi	r25, 0x30	; 48
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x3e>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x48>
 10e:	00 00       	nop
	_delay_ms(1000);
	uint8_t data = MyI2CEEPROM_test(0b10100000, 0x65);
 110:	65 e6       	ldi	r22, 0x65	; 101
 112:	80 ea       	ldi	r24, 0xA0	; 160
 114:	0e 94 49 00 	call	0x92	; 0x92 <MyI2CEEPROM_test>
	if (data == 0x65) {
 118:	85 36       	cpi	r24, 0x65	; 101
 11a:	81 f4       	brne	.+32     	; 0x13c <main+0x76>
		data = MyI2CEEPROM_test(0b10100010, 0x99);
 11c:	69 e9       	ldi	r22, 0x99	; 153
 11e:	82 ea       	ldi	r24, 0xA2	; 162
 120:	0e 94 49 00 	call	0x92	; 0x92 <MyI2CEEPROM_test>
		if (data == 0x99) {
 124:	89 39       	cpi	r24, 0x99	; 153
 126:	29 f4       	brne	.+10     	; 0x132 <main+0x6c>
			LCD_print_string("OK");
 128:	8a e6       	ldi	r24, 0x6A	; 106
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
 130:	09 c0       	rjmp	.+18     	; 0x144 <main+0x7e>
		}
		else {
			LCD_print_string("FAILED EEPROM 2");
 132:	87 e8       	ldi	r24, 0x87	; 135
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
 13a:	04 c0       	rjmp	.+8      	; 0x144 <main+0x7e>
		}
	}
	else {
		LCD_print_string("FAILED EEPROM 1");
 13c:	87 e9       	ldi	r24, 0x97	; 151
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
	}
	char *s = (char *)malloc (16 * sizeof(char));
 144:	80 e1       	ldi	r24, 0x10	; 16
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 e7 03 	call	0x7ce	; 0x7ce <malloc>
 14c:	08 2f       	mov	r16, r24
 14e:	19 2f       	mov	r17, r25
    while(1)
    {
		int dist  = (int) MyHCSR04_measure_pulse();
		sprintf(s, "D: %d", dist);
 150:	c7 ea       	ldi	r28, 0xA7	; 167
 152:	d0 e0       	ldi	r29, 0x00	; 0
		LCD_print_string("FAILED EEPROM 1");
	}
	char *s = (char *)malloc (16 * sizeof(char));
    while(1)
    {
		int dist  = (int) MyHCSR04_measure_pulse();
 154:	0e 94 53 02 	call	0x4a6	; 0x4a6 <MyHCSR04_measure_pulse>
 158:	0e 94 cc 00 	call	0x198	; 0x198 <__fixsfsi>
		sprintf(s, "D: %d", dist);
 15c:	7f 93       	push	r23
 15e:	6f 93       	push	r22
 160:	df 93       	push	r29
 162:	cf 93       	push	r28
 164:	1f 93       	push	r17
 166:	0f 93       	push	r16
 168:	0e 94 0e 05 	call	0xa1c	; 0xa1c <sprintf>
		LCD_clear();
 16c:	0e 94 0c 02 	call	0x418	; 0x418 <LCD_clear>
		LCD_print_string(s);
 170:	80 2f       	mov	r24, r16
 172:	91 2f       	mov	r25, r17
 174:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LCD_print_string>
 178:	9f ef       	ldi	r25, 0xFF	; 255
 17a:	29 e6       	ldi	r18, 0x69	; 105
 17c:	88 e1       	ldi	r24, 0x18	; 24
 17e:	91 50       	subi	r25, 0x01	; 1
 180:	20 40       	sbci	r18, 0x00	; 0
 182:	80 40       	sbci	r24, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0xb8>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0xc2>
 188:	00 00       	nop
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	de cf       	rjmp	.-68     	; 0x154 <main+0x8e>

00000198 <__fixsfsi>:
 198:	04 d0       	rcall	.+8      	; 0x1a2 <__fixunssfsi>
 19a:	68 94       	set
 19c:	b1 11       	cpse	r27, r1
 19e:	50 c0       	rjmp	.+160    	; 0x240 <__fp_szero>
 1a0:	08 95       	ret

000001a2 <__fixunssfsi>:
 1a2:	33 d0       	rcall	.+102    	; 0x20a <__fp_splitA>
 1a4:	88 f0       	brcs	.+34     	; 0x1c8 <__fixunssfsi+0x26>
 1a6:	9f 57       	subi	r25, 0x7F	; 127
 1a8:	90 f0       	brcs	.+36     	; 0x1ce <__fixunssfsi+0x2c>
 1aa:	b9 2f       	mov	r27, r25
 1ac:	99 27       	eor	r25, r25
 1ae:	b7 51       	subi	r27, 0x17	; 23
 1b0:	a0 f0       	brcs	.+40     	; 0x1da <__fixunssfsi+0x38>
 1b2:	d1 f0       	breq	.+52     	; 0x1e8 <__fixunssfsi+0x46>
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	88 1f       	adc	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	1a f0       	brmi	.+6      	; 0x1c4 <__fixunssfsi+0x22>
 1be:	ba 95       	dec	r27
 1c0:	c9 f7       	brne	.-14     	; 0x1b4 <__fixunssfsi+0x12>
 1c2:	12 c0       	rjmp	.+36     	; 0x1e8 <__fixunssfsi+0x46>
 1c4:	b1 30       	cpi	r27, 0x01	; 1
 1c6:	81 f0       	breq	.+32     	; 0x1e8 <__fixunssfsi+0x46>
 1c8:	3a d0       	rcall	.+116    	; 0x23e <__fp_zero>
 1ca:	b1 e0       	ldi	r27, 0x01	; 1
 1cc:	08 95       	ret
 1ce:	37 c0       	rjmp	.+110    	; 0x23e <__fp_zero>
 1d0:	67 2f       	mov	r22, r23
 1d2:	78 2f       	mov	r23, r24
 1d4:	88 27       	eor	r24, r24
 1d6:	b8 5f       	subi	r27, 0xF8	; 248
 1d8:	39 f0       	breq	.+14     	; 0x1e8 <__fixunssfsi+0x46>
 1da:	b9 3f       	cpi	r27, 0xF9	; 249
 1dc:	cc f3       	brlt	.-14     	; 0x1d0 <__fixunssfsi+0x2e>
 1de:	86 95       	lsr	r24
 1e0:	77 95       	ror	r23
 1e2:	67 95       	ror	r22
 1e4:	b3 95       	inc	r27
 1e6:	d9 f7       	brne	.-10     	; 0x1de <__fixunssfsi+0x3c>
 1e8:	3e f4       	brtc	.+14     	; 0x1f8 <__fixunssfsi+0x56>
 1ea:	90 95       	com	r25
 1ec:	80 95       	com	r24
 1ee:	70 95       	com	r23
 1f0:	61 95       	neg	r22
 1f2:	7f 4f       	sbci	r23, 0xFF	; 255
 1f4:	8f 4f       	sbci	r24, 0xFF	; 255
 1f6:	9f 4f       	sbci	r25, 0xFF	; 255
 1f8:	08 95       	ret

000001fa <__fp_split3>:
 1fa:	57 fd       	sbrc	r21, 7
 1fc:	90 58       	subi	r25, 0x80	; 128
 1fe:	44 0f       	add	r20, r20
 200:	55 1f       	adc	r21, r21
 202:	59 f0       	breq	.+22     	; 0x21a <__fp_splitA+0x10>
 204:	5f 3f       	cpi	r21, 0xFF	; 255
 206:	71 f0       	breq	.+28     	; 0x224 <__fp_splitA+0x1a>
 208:	47 95       	ror	r20

0000020a <__fp_splitA>:
 20a:	88 0f       	add	r24, r24
 20c:	97 fb       	bst	r25, 7
 20e:	99 1f       	adc	r25, r25
 210:	61 f0       	breq	.+24     	; 0x22a <__fp_splitA+0x20>
 212:	9f 3f       	cpi	r25, 0xFF	; 255
 214:	79 f0       	breq	.+30     	; 0x234 <__fp_splitA+0x2a>
 216:	87 95       	ror	r24
 218:	08 95       	ret
 21a:	12 16       	cp	r1, r18
 21c:	13 06       	cpc	r1, r19
 21e:	14 06       	cpc	r1, r20
 220:	55 1f       	adc	r21, r21
 222:	f2 cf       	rjmp	.-28     	; 0x208 <__fp_split3+0xe>
 224:	46 95       	lsr	r20
 226:	f1 df       	rcall	.-30     	; 0x20a <__fp_splitA>
 228:	08 c0       	rjmp	.+16     	; 0x23a <__fp_splitA+0x30>
 22a:	16 16       	cp	r1, r22
 22c:	17 06       	cpc	r1, r23
 22e:	18 06       	cpc	r1, r24
 230:	99 1f       	adc	r25, r25
 232:	f1 cf       	rjmp	.-30     	; 0x216 <__fp_splitA+0xc>
 234:	86 95       	lsr	r24
 236:	71 05       	cpc	r23, r1
 238:	61 05       	cpc	r22, r1
 23a:	08 94       	sec
 23c:	08 95       	ret

0000023e <__fp_zero>:
 23e:	e8 94       	clt

00000240 <__fp_szero>:
 240:	bb 27       	eor	r27, r27
 242:	66 27       	eor	r22, r22
 244:	77 27       	eor	r23, r23
 246:	cb 01       	movw	r24, r22
 248:	97 f9       	bld	r25, 7
 24a:	08 95       	ret

0000024c <UART_init>:
 24c:	10 bc       	out	0x20, r1	; 32
 24e:	89 b9       	out	0x09, r24	; 9
 250:	88 e1       	ldi	r24, 0x18	; 24
 252:	8a b9       	out	0x0a, r24	; 10
 254:	86 e8       	ldi	r24, 0x86	; 134
 256:	80 bd       	out	0x20, r24	; 32
 258:	08 95       	ret

0000025a <UART_send_char>:
 25a:	5d 9b       	sbis	0x0b, 5	; 11
 25c:	fe cf       	rjmp	.-4      	; 0x25a <UART_send_char>
 25e:	8c b9       	out	0x0c, r24	; 12
 260:	08 95       	ret

00000262 <UART_print_line>:
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	ec 01       	movw	r28, r24
 268:	88 81       	ld	r24, Y
 26a:	88 23       	and	r24, r24
 26c:	31 f0       	breq	.+12     	; 0x27a <UART_print_line+0x18>
 26e:	21 96       	adiw	r28, 0x01	; 1
 270:	0e 94 2d 01 	call	0x25a	; 0x25a <UART_send_char>
 274:	89 91       	ld	r24, Y+
 276:	81 11       	cpse	r24, r1
 278:	fb cf       	rjmp	.-10     	; 0x270 <UART_print_line+0xe>
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <LCD_send_char>:
	LCD_send_char(0x06, 1);
}

void LCD_send_char(char p_byte, char cmd_or_data) {
	
	*port = (p_byte  >> 4);
 280:	e0 91 b2 00 	lds	r30, 0x00B2
 284:	f0 91 b3 00 	lds	r31, 0x00B3
 288:	98 2f       	mov	r25, r24
 28a:	92 95       	swap	r25
 28c:	9f 70       	andi	r25, 0x0F	; 15
 28e:	90 83       	st	Z, r25
	
	if (cmd_or_data)
 290:	66 23       	and	r22, r22
 292:	41 f0       	breq	.+16     	; 0x2a4 <LCD_send_char+0x24>
		*port &= ~(1 << PIN_RS); // RS=0
 294:	e0 91 b2 00 	lds	r30, 0x00B2
 298:	f0 91 b3 00 	lds	r31, 0x00B3
 29c:	90 81       	ld	r25, Z
 29e:	9f 7b       	andi	r25, 0xBF	; 191
 2a0:	90 83       	st	Z, r25
 2a2:	07 c0       	rjmp	.+14     	; 0x2b2 <LCD_send_char+0x32>
	else
		*port |= (1 << PIN_RS); // RS=1
 2a4:	e0 91 b2 00 	lds	r30, 0x00B2
 2a8:	f0 91 b3 00 	lds	r31, 0x00B3
 2ac:	90 81       	ld	r25, Z
 2ae:	90 64       	ori	r25, 0x40	; 64
 2b0:	90 83       	st	Z, r25
	*port &= ~(1 << PIN_RW); // R/W=0
 2b2:	e0 91 b2 00 	lds	r30, 0x00B2
 2b6:	f0 91 b3 00 	lds	r31, 0x00B3
 2ba:	90 81       	ld	r25, Z
 2bc:	9f 7d       	andi	r25, 0xDF	; 223
 2be:	90 83       	st	Z, r25
	
	*port |= (1 <<  PIN_EN); // EN = 1;
 2c0:	e0 91 b2 00 	lds	r30, 0x00B2
 2c4:	f0 91 b3 00 	lds	r31, 0x00B3
 2c8:	90 81       	ld	r25, Z
 2ca:	90 61       	ori	r25, 0x10	; 16
 2cc:	90 83       	st	Z, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ce:	9a e0       	ldi	r25, 0x0A	; 10
 2d0:	9a 95       	dec	r25
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <LCD_send_char+0x50>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <LCD_send_char+0x56>
	_delay_us(2);
	*port &= ~(1 << PIN_EN); // High to low to EN
 2d6:	e0 91 b2 00 	lds	r30, 0x00B2
 2da:	f0 91 b3 00 	lds	r31, 0x00B3
 2de:	90 81       	ld	r25, Z
 2e0:	9f 7e       	andi	r25, 0xEF	; 239
 2e2:	90 83       	st	Z, r25
 2e4:	ef e9       	ldi	r30, 0x9F	; 159
 2e6:	ff e0       	ldi	r31, 0x0F	; 15
 2e8:	31 97       	sbiw	r30, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <LCD_send_char+0x68>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <LCD_send_char+0x6e>
 2ee:	00 00       	nop
	_delay_us(1000);
	
	*port = (*(in) & 0xf0) | (p_byte & 0x0f);
 2f0:	e0 91 b2 00 	lds	r30, 0x00B2
 2f4:	f0 91 b3 00 	lds	r31, 0x00B3
 2f8:	a0 91 ae 00 	lds	r26, 0x00AE
 2fc:	b0 91 af 00 	lds	r27, 0x00AF
 300:	9c 91       	ld	r25, X
 302:	8f 70       	andi	r24, 0x0F	; 15
 304:	90 7f       	andi	r25, 0xF0	; 240
 306:	89 2b       	or	r24, r25
 308:	80 83       	st	Z, r24
	else
		*port |= (1 << PIN_RS); // RS=1
	*port &= ~(1 << PIN_RW); // R/W=0
	*/
	
	*port |= (1 <<  PIN_EN); // EN = 1;
 30a:	e0 91 b2 00 	lds	r30, 0x00B2
 30e:	f0 91 b3 00 	lds	r31, 0x00B3
 312:	80 81       	ld	r24, Z
 314:	80 61       	ori	r24, 0x10	; 16
 316:	80 83       	st	Z, r24
 318:	fa e0       	ldi	r31, 0x0A	; 10
 31a:	fa 95       	dec	r31
 31c:	f1 f7       	brne	.-4      	; 0x31a <LCD_send_char+0x9a>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <LCD_send_char+0xa0>
	
	_delay_us(2);
	*port &= ~(1 << PIN_EN); // High to low to EN
 320:	e0 91 b2 00 	lds	r30, 0x00B2
 324:	f0 91 b3 00 	lds	r31, 0x00B3
 328:	80 81       	ld	r24, Z
 32a:	8f 7e       	andi	r24, 0xEF	; 239
 32c:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32e:	8f e3       	ldi	r24, 0x3F	; 63
 330:	9c e9       	ldi	r25, 0x9C	; 156
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	f1 f7       	brne	.-4      	; 0x332 <LCD_send_char+0xb2>
 336:	00 c0       	rjmp	.+0      	; 0x338 <LCD_send_char+0xb8>
 338:	00 00       	nop
 33a:	08 95       	ret

0000033c <LCD_init>:
 33c:	2f ef       	ldi	r18, 0xFF	; 255
 33e:	33 ed       	ldi	r19, 0xD3	; 211
 340:	40 e3       	ldi	r20, 0x30	; 48
 342:	21 50       	subi	r18, 0x01	; 1
 344:	30 40       	sbci	r19, 0x00	; 0
 346:	40 40       	sbci	r20, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <LCD_init+0x6>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <LCD_init+0x10>
 34c:	00 00       	nop
#define PIN_RW 5
#define PIN_RS 6

void LCD_init(volatile uint8_t *p_port) {
	_delay_ms(1000);
	port = p_port;
 34e:	90 93 b3 00 	sts	0x00B3, r25
 352:	80 93 b2 00 	sts	0x00B2, r24
	ddr = p_port -1;
 356:	fc 01       	movw	r30, r24
 358:	31 97       	sbiw	r30, 0x01	; 1
 35a:	f0 93 b1 00 	sts	0x00B1, r31
 35e:	e0 93 b0 00 	sts	0x00B0, r30
	in = p_port - 2;
 362:	02 97       	sbiw	r24, 0x02	; 2
 364:	90 93 af 00 	sts	0x00AF, r25
 368:	80 93 ae 00 	sts	0x00AE, r24
	*ddr = 0xff;
 36c:	8f ef       	ldi	r24, 0xFF	; 255
 36e:	80 83       	st	Z, r24
	*port &= ~(1 << PIN_EN);
 370:	e0 91 b2 00 	lds	r30, 0x00B2
 374:	f0 91 b3 00 	lds	r31, 0x00B3
 378:	80 81       	ld	r24, Z
 37a:	8f 7e       	andi	r24, 0xEF	; 239
 37c:	80 83       	st	Z, r24
	LCD_send_char(0x33, 1);
 37e:	61 e0       	ldi	r22, 0x01	; 1
 380:	83 e3       	ldi	r24, 0x33	; 51
 382:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	LCD_send_char(0x32, 1);
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	82 e3       	ldi	r24, 0x32	; 50
 38a:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	LCD_send_char(0x2c, 1);
 38e:	61 e0       	ldi	r22, 0x01	; 1
 390:	8c e2       	ldi	r24, 0x2C	; 44
 392:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	LCD_send_char(0x0e, 1);
 396:	61 e0       	ldi	r22, 0x01	; 1
 398:	8e e0       	ldi	r24, 0x0E	; 14
 39a:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	LCD_send_char(0x01, 1);
 39e:	61 e0       	ldi	r22, 0x01	; 1
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	LCD_send_char(0x06, 1);
 3a6:	61 e0       	ldi	r22, 0x01	; 1
 3a8:	86 e0       	ldi	r24, 0x06	; 6
 3aa:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
 3ae:	08 95       	ret

000003b0 <LCD_print_string>:
	_delay_us(2);
	*port &= ~(1 << PIN_EN); // High to low to EN
	_delay_ms(10);
}

void LCD_print_string(char* s) {
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	ec 01       	movw	r28, r24
	while (*s != 0) {
 3b6:	88 81       	ld	r24, Y
 3b8:	88 23       	and	r24, r24
 3ba:	39 f0       	breq	.+14     	; 0x3ca <LCD_print_string+0x1a>
 3bc:	21 96       	adiw	r28, 0x01	; 1
		LCD_send_char(*s++, 0);
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	*port &= ~(1 << PIN_EN); // High to low to EN
	_delay_ms(10);
}

void LCD_print_string(char* s) {
	while (*s != 0) {
 3c4:	89 91       	ld	r24, Y+
 3c6:	81 11       	cpse	r24, r1
 3c8:	fa cf       	rjmp	.-12     	; 0x3be <LCD_print_string+0xe>
		LCD_send_char(*s++, 0);
	}
}
 3ca:	df 91       	pop	r29
 3cc:	cf 91       	pop	r28
 3ce:	08 95       	ret

000003d0 <LCD_gotoxy>:

void LCD_gotoxy(unsigned char x, unsigned char y) {
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	00 d0       	rcall	.+0      	; 0x3d6 <LCD_gotoxy+0x6>
 3d6:	00 d0       	rcall	.+0      	; 0x3d8 <LCD_gotoxy+0x8>
 3d8:	cd b7       	in	r28, 0x3d	; 61
 3da:	de b7       	in	r29, 0x3e	; 62
	
	unsigned char first_char_addr[] = {0x80, 0xc0, 0x94, 0xd4};
 3dc:	90 e8       	ldi	r25, 0x80	; 128
 3de:	99 83       	std	Y+1, r25	; 0x01
 3e0:	90 ec       	ldi	r25, 0xC0	; 192
 3e2:	9a 83       	std	Y+2, r25	; 0x02
 3e4:	94 e9       	ldi	r25, 0x94	; 148
 3e6:	9b 83       	std	Y+3, r25	; 0x03
 3e8:	94 ed       	ldi	r25, 0xD4	; 212
 3ea:	9c 83       	std	Y+4, r25	; 0x04
	LCD_send_char(first_char_addr[y-1] + x -1, 1);
 3ec:	81 50       	subi	r24, 0x01	; 1
 3ee:	fe 01       	movw	r30, r28
 3f0:	e6 0f       	add	r30, r22
 3f2:	f1 1d       	adc	r31, r1
 3f4:	90 81       	ld	r25, Z
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	89 0f       	add	r24, r25
 3fa:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3fe:	8f e8       	ldi	r24, 0x8F	; 143
 400:	91 e0       	ldi	r25, 0x01	; 1
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <LCD_gotoxy+0x32>
 406:	00 c0       	rjmp	.+0      	; 0x408 <LCD_gotoxy+0x38>
 408:	00 00       	nop
	_delay_us(100);
}
 40a:	0f 90       	pop	r0
 40c:	0f 90       	pop	r0
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	08 95       	ret

00000418 <LCD_clear>:

void LCD_clear() {
	LCD_send_char(0x01, 1);
 418:	61 e0       	ldi	r22, 0x01	; 1
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	0e 94 40 01 	call	0x280	; 0x280 <LCD_send_char>
 420:	08 95       	ret

00000422 <MyI2CEEPROM_init>:




void MyI2CEEPROM_init() {
	MyI2C_init();
 422:	0e 94 c9 03 	call	0x792	; 0x792 <MyI2C_init>
 426:	08 95       	ret

00000428 <MyI2CEEPROM_write_byte>:
}

void MyI2CEEPROM_write_byte(
	uint8_t eeprom_wr_addr, uint8_t addr_high, uint8_t addr_low, uint8_t byte
	) 
{
 428:	0f 93       	push	r16
 42a:	1f 93       	push	r17
 42c:	cf 93       	push	r28
 42e:	df 93       	push	r29
 430:	08 2f       	mov	r16, r24
 432:	16 2f       	mov	r17, r22
 434:	d4 2f       	mov	r29, r20
 436:	c2 2f       	mov	r28, r18
	MyI2C_start();
 438:	0e 94 cf 03 	call	0x79e	; 0x79e <MyI2C_start>
	MyI2C_write(eeprom_wr_addr);
 43c:	80 2f       	mov	r24, r16
 43e:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_write(addr_high);
 442:	81 2f       	mov	r24, r17
 444:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_write(addr_low);
 448:	8d 2f       	mov	r24, r29
 44a:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_write(byte);
 44e:	8c 2f       	mov	r24, r28
 450:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_stop();
 454:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <MyI2C_stop>
}
 458:	df 91       	pop	r29
 45a:	cf 91       	pop	r28
 45c:	1f 91       	pop	r17
 45e:	0f 91       	pop	r16
 460:	08 95       	ret

00000462 <MyI2CEEPROM_read_byte>:

uint8_t MyI2CEEPROM_read_byte(
	uint8_t eeprom_wr_addr, uint8_t addr_high, uint8_t addr_low
	) 
{
 462:	1f 93       	push	r17
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	c8 2f       	mov	r28, r24
 46a:	16 2f       	mov	r17, r22
 46c:	d4 2f       	mov	r29, r20
	MyI2C_start();
 46e:	0e 94 cf 03 	call	0x79e	; 0x79e <MyI2C_start>
	MyI2C_write(eeprom_wr_addr);
 472:	8c 2f       	mov	r24, r28
 474:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_write(addr_high);
 478:	81 2f       	mov	r24, r17
 47a:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_write(addr_low);
 47e:	8d 2f       	mov	r24, r29
 480:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	MyI2C_start();
 484:	0e 94 cf 03 	call	0x79e	; 0x79e <MyI2C_start>
	MyI2C_write(eeprom_wr_addr + 1);
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	8c 0f       	add	r24, r28
 48c:	0e 94 d7 03 	call	0x7ae	; 0x7ae <MyI2C_write>
	uint8_t data = MyI2C_read(0);
 490:	80 e0       	ldi	r24, 0x00	; 0
 492:	0e 94 dd 03 	call	0x7ba	; 0x7ba <MyI2C_read>
 496:	c8 2f       	mov	r28, r24
	MyI2C_stop();
 498:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <MyI2C_stop>
	return data;
}
 49c:	8c 2f       	mov	r24, r28
 49e:	df 91       	pop	r29
 4a0:	cf 91       	pop	r28
 4a2:	1f 91       	pop	r17
 4a4:	08 95       	ret

000004a6 <MyHCSR04_measure_pulse>:
	TCCR1B = 0x00;
	PORTB &= ~(1 << PB1);
	
}
float MyHCSR04_measure_pulse(void) {
	DDRD &= ~(1<<PD6);   //ICP1 Input
 4a6:	8e 98       	cbi	0x11, 6	; 17
	DDRB |= (1 << PB1 ); // Trigger
 4a8:	b9 9a       	sbi	0x17, 1	; 23
	PORTB |= (1<<PB1);
 4aa:	c1 9a       	sbi	0x18, 1	; 24
	TCNT1H = 0;
 4ac:	1d bc       	out	0x2d, r1	; 45
	TCNT1L = 0;
 4ae:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = 0x80;
 4b0:	80 e8       	ldi	r24, 0x80	; 128
 4b2:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0x09;
 4b4:	89 e0       	ldi	r24, 0x09	; 9
 4b6:	8e bd       	out	0x2e, r24	; 46
	OCR1A = TRIGGER_TICK;
 4b8:	81 ea       	ldi	r24, 0xA1	; 161
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	9b bd       	out	0x2b, r25	; 43
 4be:	8a bd       	out	0x2a, r24	; 42
	while (!(TIFR & (1<< OCF1A)));
 4c0:	08 b6       	in	r0, 0x38	; 56
 4c2:	04 fe       	sbrs	r0, 4
 4c4:	fd cf       	rjmp	.-6      	; 0x4c0 <MyHCSR04_measure_pulse+0x1a>
	TIFR |= (1 << OCF1A);
 4c6:	88 b7       	in	r24, 0x38	; 56
 4c8:	80 61       	ori	r24, 0x10	; 16
 4ca:	88 bf       	out	0x38, r24	; 56
	TCCR1A = 0x00;
 4cc:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0x00;
 4ce:	1e bc       	out	0x2e, r1	; 46
	PORTB &= ~(1 << PB1);
 4d0:	c1 98       	cbi	0x18, 1	; 24
 4d2:	8f e1       	ldi	r24, 0x1F	; 31
 4d4:	93 e0       	ldi	r25, 0x03	; 3
 4d6:	01 97       	sbiw	r24, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <MyHCSR04_measure_pulse+0x30>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <MyHCSR04_measure_pulse+0x36>
 4dc:	00 00       	nop
	_delay_us(200);
	TIFR |= (1<< ICF1);
 4de:	88 b7       	in	r24, 0x38	; 56
 4e0:	80 62       	ori	r24, 0x20	; 32
 4e2:	88 bf       	out	0x38, r24	; 56
	while (!(PIND & (1 << PIND6)));
 4e4:	86 9b       	sbis	0x10, 6	; 16
 4e6:	fe cf       	rjmp	.-4      	; 0x4e4 <MyHCSR04_measure_pulse+0x3e>
	TCNT1H = 0;
 4e8:	1d bc       	out	0x2d, r1	; 45
	TCNT1L = 0;
 4ea:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = 0x08;
 4ec:	88 e0       	ldi	r24, 0x08	; 8
 4ee:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0x04;
 4f0:	84 e0       	ldi	r24, 0x04	; 4
 4f2:	8e bd       	out	0x2e, r24	; 46
	while (!(TIFR & (1<<ICF1)));
 4f4:	08 b6       	in	r0, 0x38	; 56
 4f6:	05 fe       	sbrs	r0, 5
 4f8:	fd cf       	rjmp	.-6      	; 0x4f4 <MyHCSR04_measure_pulse+0x4e>
	uint16_t l_icr = ICR1;
 4fa:	66 b5       	in	r22, 0x26	; 38
 4fc:	77 b5       	in	r23, 0x27	; 39
	TCCR1A = 0x00;
 4fe:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0x00;
 500:	1e bc       	out	0x2e, r1	; 46
	TIFR |= (1<< ICF1);
 502:	88 b7       	in	r24, 0x38	; 56
 504:	80 62       	ori	r24, 0x20	; 32
 506:	88 bf       	out	0x38, r24	; 56
	return ((float)l_icr * 16) / (58 );
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__floatunsisf>
 510:	20 e0       	ldi	r18, 0x00	; 0
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	40 e8       	ldi	r20, 0x80	; 128
 516:	51 e4       	ldi	r21, 0x41	; 65
 518:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__mulsf3>
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	48 e6       	ldi	r20, 0x68	; 104
 522:	52 e4       	ldi	r21, 0x42	; 66
 524:	0e 94 95 02 	call	0x52a	; 0x52a <__divsf3>
}
 528:	08 95       	ret

0000052a <__divsf3>:
 52a:	0c d0       	rcall	.+24     	; 0x544 <__divsf3x>
 52c:	ba c0       	rjmp	.+372    	; 0x6a2 <__fp_round>
 52e:	b2 d0       	rcall	.+356    	; 0x694 <__fp_pscB>
 530:	40 f0       	brcs	.+16     	; 0x542 <__divsf3+0x18>
 532:	a9 d0       	rcall	.+338    	; 0x686 <__fp_pscA>
 534:	30 f0       	brcs	.+12     	; 0x542 <__divsf3+0x18>
 536:	21 f4       	brne	.+8      	; 0x540 <__divsf3+0x16>
 538:	5f 3f       	cpi	r21, 0xFF	; 255
 53a:	19 f0       	breq	.+6      	; 0x542 <__divsf3+0x18>
 53c:	9b c0       	rjmp	.+310    	; 0x674 <__fp_inf>
 53e:	51 11       	cpse	r21, r1
 540:	7f ce       	rjmp	.-770    	; 0x240 <__fp_szero>
 542:	9e c0       	rjmp	.+316    	; 0x680 <__fp_nan>

00000544 <__divsf3x>:
 544:	5a de       	rcall	.-844    	; 0x1fa <__fp_split3>
 546:	98 f3       	brcs	.-26     	; 0x52e <__divsf3+0x4>

00000548 <__divsf3_pse>:
 548:	99 23       	and	r25, r25
 54a:	c9 f3       	breq	.-14     	; 0x53e <__divsf3+0x14>
 54c:	55 23       	and	r21, r21
 54e:	b1 f3       	breq	.-20     	; 0x53c <__divsf3+0x12>
 550:	95 1b       	sub	r25, r21
 552:	55 0b       	sbc	r21, r21
 554:	bb 27       	eor	r27, r27
 556:	aa 27       	eor	r26, r26
 558:	62 17       	cp	r22, r18
 55a:	73 07       	cpc	r23, r19
 55c:	84 07       	cpc	r24, r20
 55e:	38 f0       	brcs	.+14     	; 0x56e <__divsf3_pse+0x26>
 560:	9f 5f       	subi	r25, 0xFF	; 255
 562:	5f 4f       	sbci	r21, 0xFF	; 255
 564:	22 0f       	add	r18, r18
 566:	33 1f       	adc	r19, r19
 568:	44 1f       	adc	r20, r20
 56a:	aa 1f       	adc	r26, r26
 56c:	a9 f3       	breq	.-22     	; 0x558 <__divsf3_pse+0x10>
 56e:	33 d0       	rcall	.+102    	; 0x5d6 <__divsf3_pse+0x8e>
 570:	0e 2e       	mov	r0, r30
 572:	3a f0       	brmi	.+14     	; 0x582 <__divsf3_pse+0x3a>
 574:	e0 e8       	ldi	r30, 0x80	; 128
 576:	30 d0       	rcall	.+96     	; 0x5d8 <__divsf3_pse+0x90>
 578:	91 50       	subi	r25, 0x01	; 1
 57a:	50 40       	sbci	r21, 0x00	; 0
 57c:	e6 95       	lsr	r30
 57e:	00 1c       	adc	r0, r0
 580:	ca f7       	brpl	.-14     	; 0x574 <__divsf3_pse+0x2c>
 582:	29 d0       	rcall	.+82     	; 0x5d6 <__divsf3_pse+0x8e>
 584:	fe 2f       	mov	r31, r30
 586:	27 d0       	rcall	.+78     	; 0x5d6 <__divsf3_pse+0x8e>
 588:	66 0f       	add	r22, r22
 58a:	77 1f       	adc	r23, r23
 58c:	88 1f       	adc	r24, r24
 58e:	bb 1f       	adc	r27, r27
 590:	26 17       	cp	r18, r22
 592:	37 07       	cpc	r19, r23
 594:	48 07       	cpc	r20, r24
 596:	ab 07       	cpc	r26, r27
 598:	b0 e8       	ldi	r27, 0x80	; 128
 59a:	09 f0       	breq	.+2      	; 0x59e <__divsf3_pse+0x56>
 59c:	bb 0b       	sbc	r27, r27
 59e:	80 2d       	mov	r24, r0
 5a0:	bf 01       	movw	r22, r30
 5a2:	ff 27       	eor	r31, r31
 5a4:	93 58       	subi	r25, 0x83	; 131
 5a6:	5f 4f       	sbci	r21, 0xFF	; 255
 5a8:	2a f0       	brmi	.+10     	; 0x5b4 <__divsf3_pse+0x6c>
 5aa:	9e 3f       	cpi	r25, 0xFE	; 254
 5ac:	51 05       	cpc	r21, r1
 5ae:	68 f0       	brcs	.+26     	; 0x5ca <__divsf3_pse+0x82>
 5b0:	61 c0       	rjmp	.+194    	; 0x674 <__fp_inf>
 5b2:	46 ce       	rjmp	.-884    	; 0x240 <__fp_szero>
 5b4:	5f 3f       	cpi	r21, 0xFF	; 255
 5b6:	ec f3       	brlt	.-6      	; 0x5b2 <__divsf3_pse+0x6a>
 5b8:	98 3e       	cpi	r25, 0xE8	; 232
 5ba:	dc f3       	brlt	.-10     	; 0x5b2 <__divsf3_pse+0x6a>
 5bc:	86 95       	lsr	r24
 5be:	77 95       	ror	r23
 5c0:	67 95       	ror	r22
 5c2:	b7 95       	ror	r27
 5c4:	f7 95       	ror	r31
 5c6:	9f 5f       	subi	r25, 0xFF	; 255
 5c8:	c9 f7       	brne	.-14     	; 0x5bc <__divsf3_pse+0x74>
 5ca:	88 0f       	add	r24, r24
 5cc:	91 1d       	adc	r25, r1
 5ce:	96 95       	lsr	r25
 5d0:	87 95       	ror	r24
 5d2:	97 f9       	bld	r25, 7
 5d4:	08 95       	ret
 5d6:	e1 e0       	ldi	r30, 0x01	; 1
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	88 1f       	adc	r24, r24
 5de:	bb 1f       	adc	r27, r27
 5e0:	62 17       	cp	r22, r18
 5e2:	73 07       	cpc	r23, r19
 5e4:	84 07       	cpc	r24, r20
 5e6:	ba 07       	cpc	r27, r26
 5e8:	20 f0       	brcs	.+8      	; 0x5f2 <__divsf3_pse+0xaa>
 5ea:	62 1b       	sub	r22, r18
 5ec:	73 0b       	sbc	r23, r19
 5ee:	84 0b       	sbc	r24, r20
 5f0:	ba 0b       	sbc	r27, r26
 5f2:	ee 1f       	adc	r30, r30
 5f4:	88 f7       	brcc	.-30     	; 0x5d8 <__divsf3_pse+0x90>
 5f6:	e0 95       	com	r30
 5f8:	08 95       	ret

000005fa <__floatunsisf>:
 5fa:	e8 94       	clt
 5fc:	09 c0       	rjmp	.+18     	; 0x610 <__floatsisf+0x12>

000005fe <__floatsisf>:
 5fe:	97 fb       	bst	r25, 7
 600:	3e f4       	brtc	.+14     	; 0x610 <__floatsisf+0x12>
 602:	90 95       	com	r25
 604:	80 95       	com	r24
 606:	70 95       	com	r23
 608:	61 95       	neg	r22
 60a:	7f 4f       	sbci	r23, 0xFF	; 255
 60c:	8f 4f       	sbci	r24, 0xFF	; 255
 60e:	9f 4f       	sbci	r25, 0xFF	; 255
 610:	99 23       	and	r25, r25
 612:	a9 f0       	breq	.+42     	; 0x63e <__floatsisf+0x40>
 614:	f9 2f       	mov	r31, r25
 616:	96 e9       	ldi	r25, 0x96	; 150
 618:	bb 27       	eor	r27, r27
 61a:	93 95       	inc	r25
 61c:	f6 95       	lsr	r31
 61e:	87 95       	ror	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b7 95       	ror	r27
 626:	f1 11       	cpse	r31, r1
 628:	f8 cf       	rjmp	.-16     	; 0x61a <__floatsisf+0x1c>
 62a:	fa f4       	brpl	.+62     	; 0x66a <__floatsisf+0x6c>
 62c:	bb 0f       	add	r27, r27
 62e:	11 f4       	brne	.+4      	; 0x634 <__floatsisf+0x36>
 630:	60 ff       	sbrs	r22, 0
 632:	1b c0       	rjmp	.+54     	; 0x66a <__floatsisf+0x6c>
 634:	6f 5f       	subi	r22, 0xFF	; 255
 636:	7f 4f       	sbci	r23, 0xFF	; 255
 638:	8f 4f       	sbci	r24, 0xFF	; 255
 63a:	9f 4f       	sbci	r25, 0xFF	; 255
 63c:	16 c0       	rjmp	.+44     	; 0x66a <__floatsisf+0x6c>
 63e:	88 23       	and	r24, r24
 640:	11 f0       	breq	.+4      	; 0x646 <__floatsisf+0x48>
 642:	96 e9       	ldi	r25, 0x96	; 150
 644:	11 c0       	rjmp	.+34     	; 0x668 <__floatsisf+0x6a>
 646:	77 23       	and	r23, r23
 648:	21 f0       	breq	.+8      	; 0x652 <__floatsisf+0x54>
 64a:	9e e8       	ldi	r25, 0x8E	; 142
 64c:	87 2f       	mov	r24, r23
 64e:	76 2f       	mov	r23, r22
 650:	05 c0       	rjmp	.+10     	; 0x65c <__floatsisf+0x5e>
 652:	66 23       	and	r22, r22
 654:	71 f0       	breq	.+28     	; 0x672 <__floatsisf+0x74>
 656:	96 e8       	ldi	r25, 0x86	; 134
 658:	86 2f       	mov	r24, r22
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	60 e0       	ldi	r22, 0x00	; 0
 65e:	2a f0       	brmi	.+10     	; 0x66a <__floatsisf+0x6c>
 660:	9a 95       	dec	r25
 662:	66 0f       	add	r22, r22
 664:	77 1f       	adc	r23, r23
 666:	88 1f       	adc	r24, r24
 668:	da f7       	brpl	.-10     	; 0x660 <__floatsisf+0x62>
 66a:	88 0f       	add	r24, r24
 66c:	96 95       	lsr	r25
 66e:	87 95       	ror	r24
 670:	97 f9       	bld	r25, 7
 672:	08 95       	ret

00000674 <__fp_inf>:
 674:	97 f9       	bld	r25, 7
 676:	9f 67       	ori	r25, 0x7F	; 127
 678:	80 e8       	ldi	r24, 0x80	; 128
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	60 e0       	ldi	r22, 0x00	; 0
 67e:	08 95       	ret

00000680 <__fp_nan>:
 680:	9f ef       	ldi	r25, 0xFF	; 255
 682:	80 ec       	ldi	r24, 0xC0	; 192
 684:	08 95       	ret

00000686 <__fp_pscA>:
 686:	00 24       	eor	r0, r0
 688:	0a 94       	dec	r0
 68a:	16 16       	cp	r1, r22
 68c:	17 06       	cpc	r1, r23
 68e:	18 06       	cpc	r1, r24
 690:	09 06       	cpc	r0, r25
 692:	08 95       	ret

00000694 <__fp_pscB>:
 694:	00 24       	eor	r0, r0
 696:	0a 94       	dec	r0
 698:	12 16       	cp	r1, r18
 69a:	13 06       	cpc	r1, r19
 69c:	14 06       	cpc	r1, r20
 69e:	05 06       	cpc	r0, r21
 6a0:	08 95       	ret

000006a2 <__fp_round>:
 6a2:	09 2e       	mov	r0, r25
 6a4:	03 94       	inc	r0
 6a6:	00 0c       	add	r0, r0
 6a8:	11 f4       	brne	.+4      	; 0x6ae <__fp_round+0xc>
 6aa:	88 23       	and	r24, r24
 6ac:	52 f0       	brmi	.+20     	; 0x6c2 <__fp_round+0x20>
 6ae:	bb 0f       	add	r27, r27
 6b0:	40 f4       	brcc	.+16     	; 0x6c2 <__fp_round+0x20>
 6b2:	bf 2b       	or	r27, r31
 6b4:	11 f4       	brne	.+4      	; 0x6ba <__fp_round+0x18>
 6b6:	60 ff       	sbrs	r22, 0
 6b8:	04 c0       	rjmp	.+8      	; 0x6c2 <__fp_round+0x20>
 6ba:	6f 5f       	subi	r22, 0xFF	; 255
 6bc:	7f 4f       	sbci	r23, 0xFF	; 255
 6be:	8f 4f       	sbci	r24, 0xFF	; 255
 6c0:	9f 4f       	sbci	r25, 0xFF	; 255
 6c2:	08 95       	ret

000006c4 <__mulsf3>:
 6c4:	0b d0       	rcall	.+22     	; 0x6dc <__mulsf3x>
 6c6:	ed cf       	rjmp	.-38     	; 0x6a2 <__fp_round>
 6c8:	de df       	rcall	.-68     	; 0x686 <__fp_pscA>
 6ca:	28 f0       	brcs	.+10     	; 0x6d6 <__mulsf3+0x12>
 6cc:	e3 df       	rcall	.-58     	; 0x694 <__fp_pscB>
 6ce:	18 f0       	brcs	.+6      	; 0x6d6 <__mulsf3+0x12>
 6d0:	95 23       	and	r25, r21
 6d2:	09 f0       	breq	.+2      	; 0x6d6 <__mulsf3+0x12>
 6d4:	cf cf       	rjmp	.-98     	; 0x674 <__fp_inf>
 6d6:	d4 cf       	rjmp	.-88     	; 0x680 <__fp_nan>
 6d8:	11 24       	eor	r1, r1
 6da:	b2 cd       	rjmp	.-1180   	; 0x240 <__fp_szero>

000006dc <__mulsf3x>:
 6dc:	8e dd       	rcall	.-1252   	; 0x1fa <__fp_split3>
 6de:	a0 f3       	brcs	.-24     	; 0x6c8 <__mulsf3+0x4>

000006e0 <__mulsf3_pse>:
 6e0:	95 9f       	mul	r25, r21
 6e2:	d1 f3       	breq	.-12     	; 0x6d8 <__mulsf3+0x14>
 6e4:	95 0f       	add	r25, r21
 6e6:	50 e0       	ldi	r21, 0x00	; 0
 6e8:	55 1f       	adc	r21, r21
 6ea:	62 9f       	mul	r22, r18
 6ec:	f0 01       	movw	r30, r0
 6ee:	72 9f       	mul	r23, r18
 6f0:	bb 27       	eor	r27, r27
 6f2:	f0 0d       	add	r31, r0
 6f4:	b1 1d       	adc	r27, r1
 6f6:	63 9f       	mul	r22, r19
 6f8:	aa 27       	eor	r26, r26
 6fa:	f0 0d       	add	r31, r0
 6fc:	b1 1d       	adc	r27, r1
 6fe:	aa 1f       	adc	r26, r26
 700:	64 9f       	mul	r22, r20
 702:	66 27       	eor	r22, r22
 704:	b0 0d       	add	r27, r0
 706:	a1 1d       	adc	r26, r1
 708:	66 1f       	adc	r22, r22
 70a:	82 9f       	mul	r24, r18
 70c:	22 27       	eor	r18, r18
 70e:	b0 0d       	add	r27, r0
 710:	a1 1d       	adc	r26, r1
 712:	62 1f       	adc	r22, r18
 714:	73 9f       	mul	r23, r19
 716:	b0 0d       	add	r27, r0
 718:	a1 1d       	adc	r26, r1
 71a:	62 1f       	adc	r22, r18
 71c:	83 9f       	mul	r24, r19
 71e:	a0 0d       	add	r26, r0
 720:	61 1d       	adc	r22, r1
 722:	22 1f       	adc	r18, r18
 724:	74 9f       	mul	r23, r20
 726:	33 27       	eor	r19, r19
 728:	a0 0d       	add	r26, r0
 72a:	61 1d       	adc	r22, r1
 72c:	23 1f       	adc	r18, r19
 72e:	84 9f       	mul	r24, r20
 730:	60 0d       	add	r22, r0
 732:	21 1d       	adc	r18, r1
 734:	82 2f       	mov	r24, r18
 736:	76 2f       	mov	r23, r22
 738:	6a 2f       	mov	r22, r26
 73a:	11 24       	eor	r1, r1
 73c:	9f 57       	subi	r25, 0x7F	; 127
 73e:	50 40       	sbci	r21, 0x00	; 0
 740:	8a f0       	brmi	.+34     	; 0x764 <__mulsf3_pse+0x84>
 742:	e1 f0       	breq	.+56     	; 0x77c <__mulsf3_pse+0x9c>
 744:	88 23       	and	r24, r24
 746:	4a f0       	brmi	.+18     	; 0x75a <__mulsf3_pse+0x7a>
 748:	ee 0f       	add	r30, r30
 74a:	ff 1f       	adc	r31, r31
 74c:	bb 1f       	adc	r27, r27
 74e:	66 1f       	adc	r22, r22
 750:	77 1f       	adc	r23, r23
 752:	88 1f       	adc	r24, r24
 754:	91 50       	subi	r25, 0x01	; 1
 756:	50 40       	sbci	r21, 0x00	; 0
 758:	a9 f7       	brne	.-22     	; 0x744 <__mulsf3_pse+0x64>
 75a:	9e 3f       	cpi	r25, 0xFE	; 254
 75c:	51 05       	cpc	r21, r1
 75e:	70 f0       	brcs	.+28     	; 0x77c <__mulsf3_pse+0x9c>
 760:	89 cf       	rjmp	.-238    	; 0x674 <__fp_inf>
 762:	6e cd       	rjmp	.-1316   	; 0x240 <__fp_szero>
 764:	5f 3f       	cpi	r21, 0xFF	; 255
 766:	ec f3       	brlt	.-6      	; 0x762 <__mulsf3_pse+0x82>
 768:	98 3e       	cpi	r25, 0xE8	; 232
 76a:	dc f3       	brlt	.-10     	; 0x762 <__mulsf3_pse+0x82>
 76c:	86 95       	lsr	r24
 76e:	77 95       	ror	r23
 770:	67 95       	ror	r22
 772:	b7 95       	ror	r27
 774:	f7 95       	ror	r31
 776:	e7 95       	ror	r30
 778:	9f 5f       	subi	r25, 0xFF	; 255
 77a:	c1 f7       	brne	.-16     	; 0x76c <__mulsf3_pse+0x8c>
 77c:	fe 2b       	or	r31, r30
 77e:	88 0f       	add	r24, r24
 780:	91 1d       	adc	r25, r1
 782:	96 95       	lsr	r25
 784:	87 95       	ror	r24
 786:	97 f9       	bld	r25, 7
 788:	08 95       	ret

0000078a <wait_for_complete>:

#include <avr/io.h>
#include "MyI2C.h"

void wait_for_complete() {
	while ((TWCR & (1 << TWINT)) == 0);
 78a:	06 b6       	in	r0, 0x36	; 54
 78c:	07 fe       	sbrs	r0, 7
 78e:	fd cf       	rjmp	.-6      	; 0x78a <wait_for_complete>
}
 790:	08 95       	ret

00000792 <MyI2C_init>:

void MyI2C_init(void) {
	// SCL is 400 Mhz
	TWSR = 0x00;
 792:	11 b8       	out	0x01, r1	; 1
	TWBR = 32;
 794:	80 e2       	ldi	r24, 0x20	; 32
 796:	80 b9       	out	0x00, r24	; 0
	// Enables I2c
	TWCR = (1<<TWEN);
 798:	84 e0       	ldi	r24, 0x04	; 4
 79a:	86 bf       	out	0x36, r24	; 54
 79c:	08 95       	ret

0000079e <MyI2C_start>:
}

void MyI2C_start(void) {
	TWCR = (1<< TWINT) | (1 << TWSTA) | (1 << TWEN);
 79e:	84 ea       	ldi	r24, 0xA4	; 164
 7a0:	86 bf       	out	0x36, r24	; 54
	wait_for_complete();
 7a2:	0e 94 c5 03 	call	0x78a	; 0x78a <wait_for_complete>
 7a6:	08 95       	ret

000007a8 <MyI2C_stop>:
}

void MyI2C_stop(void) {
	TWCR = (1<<TWINT) | (1<<TWSTO) | (1<<TWEN);
 7a8:	84 e9       	ldi	r24, 0x94	; 148
 7aa:	86 bf       	out	0x36, r24	; 54
 7ac:	08 95       	ret

000007ae <MyI2C_write>:
	status = TWSR & 0xF8;
	return status;
}

void MyI2C_write(uint8_t data) {
	TWDR = data;
 7ae:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
 7b0:	84 e8       	ldi	r24, 0x84	; 132
 7b2:	86 bf       	out	0x36, r24	; 54
	wait_for_complete();
 7b4:	0e 94 c5 03 	call	0x78a	; 0x78a <wait_for_complete>
 7b8:	08 95       	ret

000007ba <MyI2C_read>:
}

uint8_t MyI2C_read(uint8_t  ack) {
	TWCR = (1<<TWINT) | (1<<TWEN) | (ack<<TWEA);
 7ba:	20 e4       	ldi	r18, 0x40	; 64
 7bc:	82 9f       	mul	r24, r18
 7be:	c0 01       	movw	r24, r0
 7c0:	11 24       	eor	r1, r1
 7c2:	84 68       	ori	r24, 0x84	; 132
 7c4:	86 bf       	out	0x36, r24	; 54
	wait_for_complete();
 7c6:	0e 94 c5 03 	call	0x78a	; 0x78a <wait_for_complete>
	return TWDR;
 7ca:	83 b1       	in	r24, 0x03	; 3
}
 7cc:	08 95       	ret

000007ce <malloc>:
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	82 30       	cpi	r24, 0x02	; 2
 7d4:	91 05       	cpc	r25, r1
 7d6:	10 f4       	brcc	.+4      	; 0x7dc <malloc+0xe>
 7d8:	82 e0       	ldi	r24, 0x02	; 2
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	e0 91 b6 00 	lds	r30, 0x00B6
 7e0:	f0 91 b7 00 	lds	r31, 0x00B7
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	a0 e0       	ldi	r26, 0x00	; 0
 7ea:	b0 e0       	ldi	r27, 0x00	; 0
 7ec:	30 97       	sbiw	r30, 0x00	; 0
 7ee:	39 f1       	breq	.+78     	; 0x83e <malloc+0x70>
 7f0:	40 81       	ld	r20, Z
 7f2:	51 81       	ldd	r21, Z+1	; 0x01
 7f4:	48 17       	cp	r20, r24
 7f6:	59 07       	cpc	r21, r25
 7f8:	b8 f0       	brcs	.+46     	; 0x828 <malloc+0x5a>
 7fa:	48 17       	cp	r20, r24
 7fc:	59 07       	cpc	r21, r25
 7fe:	71 f4       	brne	.+28     	; 0x81c <malloc+0x4e>
 800:	82 81       	ldd	r24, Z+2	; 0x02
 802:	93 81       	ldd	r25, Z+3	; 0x03
 804:	10 97       	sbiw	r26, 0x00	; 0
 806:	29 f0       	breq	.+10     	; 0x812 <malloc+0x44>
 808:	13 96       	adiw	r26, 0x03	; 3
 80a:	9c 93       	st	X, r25
 80c:	8e 93       	st	-X, r24
 80e:	12 97       	sbiw	r26, 0x02	; 2
 810:	2c c0       	rjmp	.+88     	; 0x86a <__stack+0xb>
 812:	90 93 b7 00 	sts	0x00B7, r25
 816:	80 93 b6 00 	sts	0x00B6, r24
 81a:	27 c0       	rjmp	.+78     	; 0x86a <__stack+0xb>
 81c:	21 15       	cp	r18, r1
 81e:	31 05       	cpc	r19, r1
 820:	31 f0       	breq	.+12     	; 0x82e <malloc+0x60>
 822:	42 17       	cp	r20, r18
 824:	53 07       	cpc	r21, r19
 826:	18 f0       	brcs	.+6      	; 0x82e <malloc+0x60>
 828:	a9 01       	movw	r20, r18
 82a:	db 01       	movw	r26, r22
 82c:	01 c0       	rjmp	.+2      	; 0x830 <malloc+0x62>
 82e:	ef 01       	movw	r28, r30
 830:	9a 01       	movw	r18, r20
 832:	bd 01       	movw	r22, r26
 834:	df 01       	movw	r26, r30
 836:	02 80       	ldd	r0, Z+2	; 0x02
 838:	f3 81       	ldd	r31, Z+3	; 0x03
 83a:	e0 2d       	mov	r30, r0
 83c:	d7 cf       	rjmp	.-82     	; 0x7ec <malloc+0x1e>
 83e:	21 15       	cp	r18, r1
 840:	31 05       	cpc	r19, r1
 842:	f9 f0       	breq	.+62     	; 0x882 <__stack+0x23>
 844:	28 1b       	sub	r18, r24
 846:	39 0b       	sbc	r19, r25
 848:	24 30       	cpi	r18, 0x04	; 4
 84a:	31 05       	cpc	r19, r1
 84c:	80 f4       	brcc	.+32     	; 0x86e <__stack+0xf>
 84e:	8a 81       	ldd	r24, Y+2	; 0x02
 850:	9b 81       	ldd	r25, Y+3	; 0x03
 852:	61 15       	cp	r22, r1
 854:	71 05       	cpc	r23, r1
 856:	21 f0       	breq	.+8      	; 0x860 <__stack+0x1>
 858:	fb 01       	movw	r30, r22
 85a:	93 83       	std	Z+3, r25	; 0x03
 85c:	82 83       	std	Z+2, r24	; 0x02
 85e:	04 c0       	rjmp	.+8      	; 0x868 <__stack+0x9>
 860:	90 93 b7 00 	sts	0x00B7, r25
 864:	80 93 b6 00 	sts	0x00B6, r24
 868:	fe 01       	movw	r30, r28
 86a:	32 96       	adiw	r30, 0x02	; 2
 86c:	44 c0       	rjmp	.+136    	; 0x8f6 <__stack+0x97>
 86e:	fe 01       	movw	r30, r28
 870:	e2 0f       	add	r30, r18
 872:	f3 1f       	adc	r31, r19
 874:	81 93       	st	Z+, r24
 876:	91 93       	st	Z+, r25
 878:	22 50       	subi	r18, 0x02	; 2
 87a:	31 09       	sbc	r19, r1
 87c:	39 83       	std	Y+1, r19	; 0x01
 87e:	28 83       	st	Y, r18
 880:	3a c0       	rjmp	.+116    	; 0x8f6 <__stack+0x97>
 882:	20 91 b4 00 	lds	r18, 0x00B4
 886:	30 91 b5 00 	lds	r19, 0x00B5
 88a:	23 2b       	or	r18, r19
 88c:	41 f4       	brne	.+16     	; 0x89e <__stack+0x3f>
 88e:	20 91 62 00 	lds	r18, 0x0062
 892:	30 91 63 00 	lds	r19, 0x0063
 896:	30 93 b5 00 	sts	0x00B5, r19
 89a:	20 93 b4 00 	sts	0x00B4, r18
 89e:	20 91 60 00 	lds	r18, 0x0060
 8a2:	30 91 61 00 	lds	r19, 0x0061
 8a6:	21 15       	cp	r18, r1
 8a8:	31 05       	cpc	r19, r1
 8aa:	41 f4       	brne	.+16     	; 0x8bc <__stack+0x5d>
 8ac:	2d b7       	in	r18, 0x3d	; 61
 8ae:	3e b7       	in	r19, 0x3e	; 62
 8b0:	40 91 64 00 	lds	r20, 0x0064
 8b4:	50 91 65 00 	lds	r21, 0x0065
 8b8:	24 1b       	sub	r18, r20
 8ba:	35 0b       	sbc	r19, r21
 8bc:	e0 91 b4 00 	lds	r30, 0x00B4
 8c0:	f0 91 b5 00 	lds	r31, 0x00B5
 8c4:	e2 17       	cp	r30, r18
 8c6:	f3 07       	cpc	r31, r19
 8c8:	a0 f4       	brcc	.+40     	; 0x8f2 <__stack+0x93>
 8ca:	2e 1b       	sub	r18, r30
 8cc:	3f 0b       	sbc	r19, r31
 8ce:	28 17       	cp	r18, r24
 8d0:	39 07       	cpc	r19, r25
 8d2:	78 f0       	brcs	.+30     	; 0x8f2 <__stack+0x93>
 8d4:	ac 01       	movw	r20, r24
 8d6:	4e 5f       	subi	r20, 0xFE	; 254
 8d8:	5f 4f       	sbci	r21, 0xFF	; 255
 8da:	24 17       	cp	r18, r20
 8dc:	35 07       	cpc	r19, r21
 8de:	48 f0       	brcs	.+18     	; 0x8f2 <__stack+0x93>
 8e0:	4e 0f       	add	r20, r30
 8e2:	5f 1f       	adc	r21, r31
 8e4:	50 93 b5 00 	sts	0x00B5, r21
 8e8:	40 93 b4 00 	sts	0x00B4, r20
 8ec:	81 93       	st	Z+, r24
 8ee:	91 93       	st	Z+, r25
 8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <__stack+0x97>
 8f2:	e0 e0       	ldi	r30, 0x00	; 0
 8f4:	f0 e0       	ldi	r31, 0x00	; 0
 8f6:	cf 01       	movw	r24, r30
 8f8:	df 91       	pop	r29
 8fa:	cf 91       	pop	r28
 8fc:	08 95       	ret

000008fe <free>:
 8fe:	cf 93       	push	r28
 900:	df 93       	push	r29
 902:	00 97       	sbiw	r24, 0x00	; 0
 904:	09 f4       	brne	.+2      	; 0x908 <free+0xa>
 906:	87 c0       	rjmp	.+270    	; 0xa16 <free+0x118>
 908:	fc 01       	movw	r30, r24
 90a:	32 97       	sbiw	r30, 0x02	; 2
 90c:	13 82       	std	Z+3, r1	; 0x03
 90e:	12 82       	std	Z+2, r1	; 0x02
 910:	c0 91 b6 00 	lds	r28, 0x00B6
 914:	d0 91 b7 00 	lds	r29, 0x00B7
 918:	20 97       	sbiw	r28, 0x00	; 0
 91a:	81 f4       	brne	.+32     	; 0x93c <free+0x3e>
 91c:	20 81       	ld	r18, Z
 91e:	31 81       	ldd	r19, Z+1	; 0x01
 920:	28 0f       	add	r18, r24
 922:	39 1f       	adc	r19, r25
 924:	80 91 b4 00 	lds	r24, 0x00B4
 928:	90 91 b5 00 	lds	r25, 0x00B5
 92c:	82 17       	cp	r24, r18
 92e:	93 07       	cpc	r25, r19
 930:	79 f5       	brne	.+94     	; 0x990 <free+0x92>
 932:	f0 93 b5 00 	sts	0x00B5, r31
 936:	e0 93 b4 00 	sts	0x00B4, r30
 93a:	6d c0       	rjmp	.+218    	; 0xa16 <free+0x118>
 93c:	de 01       	movw	r26, r28
 93e:	20 e0       	ldi	r18, 0x00	; 0
 940:	30 e0       	ldi	r19, 0x00	; 0
 942:	ae 17       	cp	r26, r30
 944:	bf 07       	cpc	r27, r31
 946:	50 f4       	brcc	.+20     	; 0x95c <free+0x5e>
 948:	12 96       	adiw	r26, 0x02	; 2
 94a:	4d 91       	ld	r20, X+
 94c:	5c 91       	ld	r21, X
 94e:	13 97       	sbiw	r26, 0x03	; 3
 950:	9d 01       	movw	r18, r26
 952:	41 15       	cp	r20, r1
 954:	51 05       	cpc	r21, r1
 956:	09 f1       	breq	.+66     	; 0x99a <free+0x9c>
 958:	da 01       	movw	r26, r20
 95a:	f3 cf       	rjmp	.-26     	; 0x942 <free+0x44>
 95c:	b3 83       	std	Z+3, r27	; 0x03
 95e:	a2 83       	std	Z+2, r26	; 0x02
 960:	40 81       	ld	r20, Z
 962:	51 81       	ldd	r21, Z+1	; 0x01
 964:	84 0f       	add	r24, r20
 966:	95 1f       	adc	r25, r21
 968:	8a 17       	cp	r24, r26
 96a:	9b 07       	cpc	r25, r27
 96c:	71 f4       	brne	.+28     	; 0x98a <free+0x8c>
 96e:	8d 91       	ld	r24, X+
 970:	9c 91       	ld	r25, X
 972:	11 97       	sbiw	r26, 0x01	; 1
 974:	84 0f       	add	r24, r20
 976:	95 1f       	adc	r25, r21
 978:	02 96       	adiw	r24, 0x02	; 2
 97a:	91 83       	std	Z+1, r25	; 0x01
 97c:	80 83       	st	Z, r24
 97e:	12 96       	adiw	r26, 0x02	; 2
 980:	8d 91       	ld	r24, X+
 982:	9c 91       	ld	r25, X
 984:	13 97       	sbiw	r26, 0x03	; 3
 986:	93 83       	std	Z+3, r25	; 0x03
 988:	82 83       	std	Z+2, r24	; 0x02
 98a:	21 15       	cp	r18, r1
 98c:	31 05       	cpc	r19, r1
 98e:	29 f4       	brne	.+10     	; 0x99a <free+0x9c>
 990:	f0 93 b7 00 	sts	0x00B7, r31
 994:	e0 93 b6 00 	sts	0x00B6, r30
 998:	3e c0       	rjmp	.+124    	; 0xa16 <free+0x118>
 99a:	d9 01       	movw	r26, r18
 99c:	13 96       	adiw	r26, 0x03	; 3
 99e:	fc 93       	st	X, r31
 9a0:	ee 93       	st	-X, r30
 9a2:	12 97       	sbiw	r26, 0x02	; 2
 9a4:	4d 91       	ld	r20, X+
 9a6:	5d 91       	ld	r21, X+
 9a8:	a4 0f       	add	r26, r20
 9aa:	b5 1f       	adc	r27, r21
 9ac:	ea 17       	cp	r30, r26
 9ae:	fb 07       	cpc	r31, r27
 9b0:	79 f4       	brne	.+30     	; 0x9d0 <free+0xd2>
 9b2:	80 81       	ld	r24, Z
 9b4:	91 81       	ldd	r25, Z+1	; 0x01
 9b6:	84 0f       	add	r24, r20
 9b8:	95 1f       	adc	r25, r21
 9ba:	02 96       	adiw	r24, 0x02	; 2
 9bc:	d9 01       	movw	r26, r18
 9be:	11 96       	adiw	r26, 0x01	; 1
 9c0:	9c 93       	st	X, r25
 9c2:	8e 93       	st	-X, r24
 9c4:	82 81       	ldd	r24, Z+2	; 0x02
 9c6:	93 81       	ldd	r25, Z+3	; 0x03
 9c8:	13 96       	adiw	r26, 0x03	; 3
 9ca:	9c 93       	st	X, r25
 9cc:	8e 93       	st	-X, r24
 9ce:	12 97       	sbiw	r26, 0x02	; 2
 9d0:	e0 e0       	ldi	r30, 0x00	; 0
 9d2:	f0 e0       	ldi	r31, 0x00	; 0
 9d4:	8a 81       	ldd	r24, Y+2	; 0x02
 9d6:	9b 81       	ldd	r25, Y+3	; 0x03
 9d8:	00 97       	sbiw	r24, 0x00	; 0
 9da:	19 f0       	breq	.+6      	; 0x9e2 <free+0xe4>
 9dc:	fe 01       	movw	r30, r28
 9de:	ec 01       	movw	r28, r24
 9e0:	f9 cf       	rjmp	.-14     	; 0x9d4 <free+0xd6>
 9e2:	ce 01       	movw	r24, r28
 9e4:	02 96       	adiw	r24, 0x02	; 2
 9e6:	28 81       	ld	r18, Y
 9e8:	39 81       	ldd	r19, Y+1	; 0x01
 9ea:	82 0f       	add	r24, r18
 9ec:	93 1f       	adc	r25, r19
 9ee:	20 91 b4 00 	lds	r18, 0x00B4
 9f2:	30 91 b5 00 	lds	r19, 0x00B5
 9f6:	28 17       	cp	r18, r24
 9f8:	39 07       	cpc	r19, r25
 9fa:	69 f4       	brne	.+26     	; 0xa16 <free+0x118>
 9fc:	30 97       	sbiw	r30, 0x00	; 0
 9fe:	29 f4       	brne	.+10     	; 0xa0a <free+0x10c>
 a00:	10 92 b7 00 	sts	0x00B7, r1
 a04:	10 92 b6 00 	sts	0x00B6, r1
 a08:	02 c0       	rjmp	.+4      	; 0xa0e <free+0x110>
 a0a:	13 82       	std	Z+3, r1	; 0x03
 a0c:	12 82       	std	Z+2, r1	; 0x02
 a0e:	d0 93 b5 00 	sts	0x00B5, r29
 a12:	c0 93 b4 00 	sts	0x00B4, r28
 a16:	df 91       	pop	r29
 a18:	cf 91       	pop	r28
 a1a:	08 95       	ret

00000a1c <sprintf>:
 a1c:	ae e0       	ldi	r26, 0x0E	; 14
 a1e:	b0 e0       	ldi	r27, 0x00	; 0
 a20:	e4 e1       	ldi	r30, 0x14	; 20
 a22:	f5 e0       	ldi	r31, 0x05	; 5
 a24:	0c 94 b6 07 	jmp	0xf6c	; 0xf6c <__prologue_saves__+0x1c>
 a28:	0d 89       	ldd	r16, Y+21	; 0x15
 a2a:	1e 89       	ldd	r17, Y+22	; 0x16
 a2c:	86 e0       	ldi	r24, 0x06	; 6
 a2e:	8c 83       	std	Y+4, r24	; 0x04
 a30:	1a 83       	std	Y+2, r17	; 0x02
 a32:	09 83       	std	Y+1, r16	; 0x01
 a34:	8f ef       	ldi	r24, 0xFF	; 255
 a36:	9f e7       	ldi	r25, 0x7F	; 127
 a38:	9e 83       	std	Y+6, r25	; 0x06
 a3a:	8d 83       	std	Y+5, r24	; 0x05
 a3c:	ae 01       	movw	r20, r28
 a3e:	47 5e       	subi	r20, 0xE7	; 231
 a40:	5f 4f       	sbci	r21, 0xFF	; 255
 a42:	6f 89       	ldd	r22, Y+23	; 0x17
 a44:	78 8d       	ldd	r23, Y+24	; 0x18
 a46:	ce 01       	movw	r24, r28
 a48:	01 96       	adiw	r24, 0x01	; 1
 a4a:	0e 94 30 05 	call	0xa60	; 0xa60 <vfprintf>
 a4e:	ef 81       	ldd	r30, Y+7	; 0x07
 a50:	f8 85       	ldd	r31, Y+8	; 0x08
 a52:	e0 0f       	add	r30, r16
 a54:	f1 1f       	adc	r31, r17
 a56:	10 82       	st	Z, r1
 a58:	2e 96       	adiw	r28, 0x0e	; 14
 a5a:	e4 e0       	ldi	r30, 0x04	; 4
 a5c:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__epilogue_restores__+0x1c>

00000a60 <vfprintf>:
 a60:	ac e0       	ldi	r26, 0x0C	; 12
 a62:	b0 e0       	ldi	r27, 0x00	; 0
 a64:	e6 e3       	ldi	r30, 0x36	; 54
 a66:	f5 e0       	ldi	r31, 0x05	; 5
 a68:	0c 94 a8 07 	jmp	0xf50	; 0xf50 <__prologue_saves__>
 a6c:	7c 01       	movw	r14, r24
 a6e:	6b 01       	movw	r12, r22
 a70:	8a 01       	movw	r16, r20
 a72:	fc 01       	movw	r30, r24
 a74:	17 82       	std	Z+7, r1	; 0x07
 a76:	16 82       	std	Z+6, r1	; 0x06
 a78:	83 81       	ldd	r24, Z+3	; 0x03
 a7a:	81 ff       	sbrs	r24, 1
 a7c:	bd c1       	rjmp	.+890    	; 0xdf8 <vfprintf+0x398>
 a7e:	ce 01       	movw	r24, r28
 a80:	01 96       	adiw	r24, 0x01	; 1
 a82:	4c 01       	movw	r8, r24
 a84:	f7 01       	movw	r30, r14
 a86:	93 81       	ldd	r25, Z+3	; 0x03
 a88:	f6 01       	movw	r30, r12
 a8a:	93 fd       	sbrc	r25, 3
 a8c:	85 91       	lpm	r24, Z+
 a8e:	93 ff       	sbrs	r25, 3
 a90:	81 91       	ld	r24, Z+
 a92:	6f 01       	movw	r12, r30
 a94:	88 23       	and	r24, r24
 a96:	09 f4       	brne	.+2      	; 0xa9a <vfprintf+0x3a>
 a98:	ab c1       	rjmp	.+854    	; 0xdf0 <vfprintf+0x390>
 a9a:	85 32       	cpi	r24, 0x25	; 37
 a9c:	39 f4       	brne	.+14     	; 0xaac <vfprintf+0x4c>
 a9e:	93 fd       	sbrc	r25, 3
 aa0:	85 91       	lpm	r24, Z+
 aa2:	93 ff       	sbrs	r25, 3
 aa4:	81 91       	ld	r24, Z+
 aa6:	6f 01       	movw	r12, r30
 aa8:	85 32       	cpi	r24, 0x25	; 37
 aaa:	29 f4       	brne	.+10     	; 0xab6 <vfprintf+0x56>
 aac:	b7 01       	movw	r22, r14
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 ab4:	e7 cf       	rjmp	.-50     	; 0xa84 <vfprintf+0x24>
 ab6:	51 2c       	mov	r5, r1
 ab8:	31 2c       	mov	r3, r1
 aba:	20 e0       	ldi	r18, 0x00	; 0
 abc:	20 32       	cpi	r18, 0x20	; 32
 abe:	a0 f4       	brcc	.+40     	; 0xae8 <vfprintf+0x88>
 ac0:	8b 32       	cpi	r24, 0x2B	; 43
 ac2:	69 f0       	breq	.+26     	; 0xade <vfprintf+0x7e>
 ac4:	30 f4       	brcc	.+12     	; 0xad2 <vfprintf+0x72>
 ac6:	80 32       	cpi	r24, 0x20	; 32
 ac8:	59 f0       	breq	.+22     	; 0xae0 <vfprintf+0x80>
 aca:	83 32       	cpi	r24, 0x23	; 35
 acc:	69 f4       	brne	.+26     	; 0xae8 <vfprintf+0x88>
 ace:	20 61       	ori	r18, 0x10	; 16
 ad0:	2c c0       	rjmp	.+88     	; 0xb2a <vfprintf+0xca>
 ad2:	8d 32       	cpi	r24, 0x2D	; 45
 ad4:	39 f0       	breq	.+14     	; 0xae4 <vfprintf+0x84>
 ad6:	80 33       	cpi	r24, 0x30	; 48
 ad8:	39 f4       	brne	.+14     	; 0xae8 <vfprintf+0x88>
 ada:	21 60       	ori	r18, 0x01	; 1
 adc:	26 c0       	rjmp	.+76     	; 0xb2a <vfprintf+0xca>
 ade:	22 60       	ori	r18, 0x02	; 2
 ae0:	24 60       	ori	r18, 0x04	; 4
 ae2:	23 c0       	rjmp	.+70     	; 0xb2a <vfprintf+0xca>
 ae4:	28 60       	ori	r18, 0x08	; 8
 ae6:	21 c0       	rjmp	.+66     	; 0xb2a <vfprintf+0xca>
 ae8:	27 fd       	sbrc	r18, 7
 aea:	27 c0       	rjmp	.+78     	; 0xb3a <vfprintf+0xda>
 aec:	30 ed       	ldi	r19, 0xD0	; 208
 aee:	38 0f       	add	r19, r24
 af0:	3a 30       	cpi	r19, 0x0A	; 10
 af2:	78 f4       	brcc	.+30     	; 0xb12 <vfprintf+0xb2>
 af4:	26 ff       	sbrs	r18, 6
 af6:	06 c0       	rjmp	.+12     	; 0xb04 <vfprintf+0xa4>
 af8:	fa e0       	ldi	r31, 0x0A	; 10
 afa:	5f 9e       	mul	r5, r31
 afc:	30 0d       	add	r19, r0
 afe:	11 24       	eor	r1, r1
 b00:	53 2e       	mov	r5, r19
 b02:	13 c0       	rjmp	.+38     	; 0xb2a <vfprintf+0xca>
 b04:	8a e0       	ldi	r24, 0x0A	; 10
 b06:	38 9e       	mul	r3, r24
 b08:	30 0d       	add	r19, r0
 b0a:	11 24       	eor	r1, r1
 b0c:	33 2e       	mov	r3, r19
 b0e:	20 62       	ori	r18, 0x20	; 32
 b10:	0c c0       	rjmp	.+24     	; 0xb2a <vfprintf+0xca>
 b12:	8e 32       	cpi	r24, 0x2E	; 46
 b14:	21 f4       	brne	.+8      	; 0xb1e <vfprintf+0xbe>
 b16:	26 fd       	sbrc	r18, 6
 b18:	6b c1       	rjmp	.+726    	; 0xdf0 <vfprintf+0x390>
 b1a:	20 64       	ori	r18, 0x40	; 64
 b1c:	06 c0       	rjmp	.+12     	; 0xb2a <vfprintf+0xca>
 b1e:	8c 36       	cpi	r24, 0x6C	; 108
 b20:	11 f4       	brne	.+4      	; 0xb26 <vfprintf+0xc6>
 b22:	20 68       	ori	r18, 0x80	; 128
 b24:	02 c0       	rjmp	.+4      	; 0xb2a <vfprintf+0xca>
 b26:	88 36       	cpi	r24, 0x68	; 104
 b28:	41 f4       	brne	.+16     	; 0xb3a <vfprintf+0xda>
 b2a:	f6 01       	movw	r30, r12
 b2c:	93 fd       	sbrc	r25, 3
 b2e:	85 91       	lpm	r24, Z+
 b30:	93 ff       	sbrs	r25, 3
 b32:	81 91       	ld	r24, Z+
 b34:	6f 01       	movw	r12, r30
 b36:	81 11       	cpse	r24, r1
 b38:	c1 cf       	rjmp	.-126    	; 0xabc <vfprintf+0x5c>
 b3a:	98 2f       	mov	r25, r24
 b3c:	9f 7d       	andi	r25, 0xDF	; 223
 b3e:	95 54       	subi	r25, 0x45	; 69
 b40:	93 30       	cpi	r25, 0x03	; 3
 b42:	28 f4       	brcc	.+10     	; 0xb4e <vfprintf+0xee>
 b44:	0c 5f       	subi	r16, 0xFC	; 252
 b46:	1f 4f       	sbci	r17, 0xFF	; 255
 b48:	ff e3       	ldi	r31, 0x3F	; 63
 b4a:	f9 83       	std	Y+1, r31	; 0x01
 b4c:	0d c0       	rjmp	.+26     	; 0xb68 <vfprintf+0x108>
 b4e:	83 36       	cpi	r24, 0x63	; 99
 b50:	31 f0       	breq	.+12     	; 0xb5e <vfprintf+0xfe>
 b52:	83 37       	cpi	r24, 0x73	; 115
 b54:	71 f0       	breq	.+28     	; 0xb72 <vfprintf+0x112>
 b56:	83 35       	cpi	r24, 0x53	; 83
 b58:	09 f0       	breq	.+2      	; 0xb5c <vfprintf+0xfc>
 b5a:	5b c0       	rjmp	.+182    	; 0xc12 <vfprintf+0x1b2>
 b5c:	22 c0       	rjmp	.+68     	; 0xba2 <vfprintf+0x142>
 b5e:	f8 01       	movw	r30, r16
 b60:	80 81       	ld	r24, Z
 b62:	89 83       	std	Y+1, r24	; 0x01
 b64:	0e 5f       	subi	r16, 0xFE	; 254
 b66:	1f 4f       	sbci	r17, 0xFF	; 255
 b68:	44 24       	eor	r4, r4
 b6a:	43 94       	inc	r4
 b6c:	51 2c       	mov	r5, r1
 b6e:	54 01       	movw	r10, r8
 b70:	15 c0       	rjmp	.+42     	; 0xb9c <vfprintf+0x13c>
 b72:	38 01       	movw	r6, r16
 b74:	f2 e0       	ldi	r31, 0x02	; 2
 b76:	6f 0e       	add	r6, r31
 b78:	71 1c       	adc	r7, r1
 b7a:	f8 01       	movw	r30, r16
 b7c:	a0 80       	ld	r10, Z
 b7e:	b1 80       	ldd	r11, Z+1	; 0x01
 b80:	26 ff       	sbrs	r18, 6
 b82:	03 c0       	rjmp	.+6      	; 0xb8a <vfprintf+0x12a>
 b84:	65 2d       	mov	r22, r5
 b86:	70 e0       	ldi	r23, 0x00	; 0
 b88:	02 c0       	rjmp	.+4      	; 0xb8e <vfprintf+0x12e>
 b8a:	6f ef       	ldi	r22, 0xFF	; 255
 b8c:	7f ef       	ldi	r23, 0xFF	; 255
 b8e:	c5 01       	movw	r24, r10
 b90:	2c 87       	std	Y+12, r18	; 0x0c
 b92:	0e 94 0d 07 	call	0xe1a	; 0xe1a <strnlen>
 b96:	2c 01       	movw	r4, r24
 b98:	83 01       	movw	r16, r6
 b9a:	2c 85       	ldd	r18, Y+12	; 0x0c
 b9c:	2f 77       	andi	r18, 0x7F	; 127
 b9e:	22 2e       	mov	r2, r18
 ba0:	17 c0       	rjmp	.+46     	; 0xbd0 <vfprintf+0x170>
 ba2:	38 01       	movw	r6, r16
 ba4:	f2 e0       	ldi	r31, 0x02	; 2
 ba6:	6f 0e       	add	r6, r31
 ba8:	71 1c       	adc	r7, r1
 baa:	f8 01       	movw	r30, r16
 bac:	a0 80       	ld	r10, Z
 bae:	b1 80       	ldd	r11, Z+1	; 0x01
 bb0:	26 ff       	sbrs	r18, 6
 bb2:	03 c0       	rjmp	.+6      	; 0xbba <vfprintf+0x15a>
 bb4:	65 2d       	mov	r22, r5
 bb6:	70 e0       	ldi	r23, 0x00	; 0
 bb8:	02 c0       	rjmp	.+4      	; 0xbbe <vfprintf+0x15e>
 bba:	6f ef       	ldi	r22, 0xFF	; 255
 bbc:	7f ef       	ldi	r23, 0xFF	; 255
 bbe:	c5 01       	movw	r24, r10
 bc0:	2c 87       	std	Y+12, r18	; 0x0c
 bc2:	0e 94 02 07 	call	0xe04	; 0xe04 <strnlen_P>
 bc6:	2c 01       	movw	r4, r24
 bc8:	2c 85       	ldd	r18, Y+12	; 0x0c
 bca:	20 68       	ori	r18, 0x80	; 128
 bcc:	22 2e       	mov	r2, r18
 bce:	83 01       	movw	r16, r6
 bd0:	23 fc       	sbrc	r2, 3
 bd2:	1b c0       	rjmp	.+54     	; 0xc0a <vfprintf+0x1aa>
 bd4:	83 2d       	mov	r24, r3
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	48 16       	cp	r4, r24
 bda:	59 06       	cpc	r5, r25
 bdc:	b0 f4       	brcc	.+44     	; 0xc0a <vfprintf+0x1aa>
 bde:	b7 01       	movw	r22, r14
 be0:	80 e2       	ldi	r24, 0x20	; 32
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 be8:	3a 94       	dec	r3
 bea:	f4 cf       	rjmp	.-24     	; 0xbd4 <vfprintf+0x174>
 bec:	f5 01       	movw	r30, r10
 bee:	27 fc       	sbrc	r2, 7
 bf0:	85 91       	lpm	r24, Z+
 bf2:	27 fe       	sbrs	r2, 7
 bf4:	81 91       	ld	r24, Z+
 bf6:	5f 01       	movw	r10, r30
 bf8:	b7 01       	movw	r22, r14
 bfa:	90 e0       	ldi	r25, 0x00	; 0
 bfc:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 c00:	31 10       	cpse	r3, r1
 c02:	3a 94       	dec	r3
 c04:	f1 e0       	ldi	r31, 0x01	; 1
 c06:	4f 1a       	sub	r4, r31
 c08:	51 08       	sbc	r5, r1
 c0a:	41 14       	cp	r4, r1
 c0c:	51 04       	cpc	r5, r1
 c0e:	71 f7       	brne	.-36     	; 0xbec <vfprintf+0x18c>
 c10:	e5 c0       	rjmp	.+458    	; 0xddc <vfprintf+0x37c>
 c12:	84 36       	cpi	r24, 0x64	; 100
 c14:	11 f0       	breq	.+4      	; 0xc1a <vfprintf+0x1ba>
 c16:	89 36       	cpi	r24, 0x69	; 105
 c18:	39 f5       	brne	.+78     	; 0xc68 <vfprintf+0x208>
 c1a:	f8 01       	movw	r30, r16
 c1c:	27 ff       	sbrs	r18, 7
 c1e:	07 c0       	rjmp	.+14     	; 0xc2e <vfprintf+0x1ce>
 c20:	60 81       	ld	r22, Z
 c22:	71 81       	ldd	r23, Z+1	; 0x01
 c24:	82 81       	ldd	r24, Z+2	; 0x02
 c26:	93 81       	ldd	r25, Z+3	; 0x03
 c28:	0c 5f       	subi	r16, 0xFC	; 252
 c2a:	1f 4f       	sbci	r17, 0xFF	; 255
 c2c:	08 c0       	rjmp	.+16     	; 0xc3e <vfprintf+0x1de>
 c2e:	60 81       	ld	r22, Z
 c30:	71 81       	ldd	r23, Z+1	; 0x01
 c32:	88 27       	eor	r24, r24
 c34:	77 fd       	sbrc	r23, 7
 c36:	80 95       	com	r24
 c38:	98 2f       	mov	r25, r24
 c3a:	0e 5f       	subi	r16, 0xFE	; 254
 c3c:	1f 4f       	sbci	r17, 0xFF	; 255
 c3e:	2f 76       	andi	r18, 0x6F	; 111
 c40:	b2 2e       	mov	r11, r18
 c42:	97 ff       	sbrs	r25, 7
 c44:	09 c0       	rjmp	.+18     	; 0xc58 <vfprintf+0x1f8>
 c46:	90 95       	com	r25
 c48:	80 95       	com	r24
 c4a:	70 95       	com	r23
 c4c:	61 95       	neg	r22
 c4e:	7f 4f       	sbci	r23, 0xFF	; 255
 c50:	8f 4f       	sbci	r24, 0xFF	; 255
 c52:	9f 4f       	sbci	r25, 0xFF	; 255
 c54:	20 68       	ori	r18, 0x80	; 128
 c56:	b2 2e       	mov	r11, r18
 c58:	2a e0       	ldi	r18, 0x0A	; 10
 c5a:	30 e0       	ldi	r19, 0x00	; 0
 c5c:	a4 01       	movw	r20, r8
 c5e:	0e 94 4a 07 	call	0xe94	; 0xe94 <__ultoa_invert>
 c62:	a8 2e       	mov	r10, r24
 c64:	a8 18       	sub	r10, r8
 c66:	44 c0       	rjmp	.+136    	; 0xcf0 <vfprintf+0x290>
 c68:	85 37       	cpi	r24, 0x75	; 117
 c6a:	29 f4       	brne	.+10     	; 0xc76 <vfprintf+0x216>
 c6c:	2f 7e       	andi	r18, 0xEF	; 239
 c6e:	b2 2e       	mov	r11, r18
 c70:	2a e0       	ldi	r18, 0x0A	; 10
 c72:	30 e0       	ldi	r19, 0x00	; 0
 c74:	25 c0       	rjmp	.+74     	; 0xcc0 <vfprintf+0x260>
 c76:	f2 2f       	mov	r31, r18
 c78:	f9 7f       	andi	r31, 0xF9	; 249
 c7a:	bf 2e       	mov	r11, r31
 c7c:	8f 36       	cpi	r24, 0x6F	; 111
 c7e:	c1 f0       	breq	.+48     	; 0xcb0 <vfprintf+0x250>
 c80:	18 f4       	brcc	.+6      	; 0xc88 <vfprintf+0x228>
 c82:	88 35       	cpi	r24, 0x58	; 88
 c84:	79 f0       	breq	.+30     	; 0xca4 <vfprintf+0x244>
 c86:	b4 c0       	rjmp	.+360    	; 0xdf0 <vfprintf+0x390>
 c88:	80 37       	cpi	r24, 0x70	; 112
 c8a:	19 f0       	breq	.+6      	; 0xc92 <vfprintf+0x232>
 c8c:	88 37       	cpi	r24, 0x78	; 120
 c8e:	21 f0       	breq	.+8      	; 0xc98 <vfprintf+0x238>
 c90:	af c0       	rjmp	.+350    	; 0xdf0 <vfprintf+0x390>
 c92:	2f 2f       	mov	r18, r31
 c94:	20 61       	ori	r18, 0x10	; 16
 c96:	b2 2e       	mov	r11, r18
 c98:	b4 fe       	sbrs	r11, 4
 c9a:	0d c0       	rjmp	.+26     	; 0xcb6 <vfprintf+0x256>
 c9c:	8b 2d       	mov	r24, r11
 c9e:	84 60       	ori	r24, 0x04	; 4
 ca0:	b8 2e       	mov	r11, r24
 ca2:	09 c0       	rjmp	.+18     	; 0xcb6 <vfprintf+0x256>
 ca4:	24 ff       	sbrs	r18, 4
 ca6:	0a c0       	rjmp	.+20     	; 0xcbc <vfprintf+0x25c>
 ca8:	9f 2f       	mov	r25, r31
 caa:	96 60       	ori	r25, 0x06	; 6
 cac:	b9 2e       	mov	r11, r25
 cae:	06 c0       	rjmp	.+12     	; 0xcbc <vfprintf+0x25c>
 cb0:	28 e0       	ldi	r18, 0x08	; 8
 cb2:	30 e0       	ldi	r19, 0x00	; 0
 cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <vfprintf+0x260>
 cb6:	20 e1       	ldi	r18, 0x10	; 16
 cb8:	30 e0       	ldi	r19, 0x00	; 0
 cba:	02 c0       	rjmp	.+4      	; 0xcc0 <vfprintf+0x260>
 cbc:	20 e1       	ldi	r18, 0x10	; 16
 cbe:	32 e0       	ldi	r19, 0x02	; 2
 cc0:	f8 01       	movw	r30, r16
 cc2:	b7 fe       	sbrs	r11, 7
 cc4:	07 c0       	rjmp	.+14     	; 0xcd4 <vfprintf+0x274>
 cc6:	60 81       	ld	r22, Z
 cc8:	71 81       	ldd	r23, Z+1	; 0x01
 cca:	82 81       	ldd	r24, Z+2	; 0x02
 ccc:	93 81       	ldd	r25, Z+3	; 0x03
 cce:	0c 5f       	subi	r16, 0xFC	; 252
 cd0:	1f 4f       	sbci	r17, 0xFF	; 255
 cd2:	06 c0       	rjmp	.+12     	; 0xce0 <vfprintf+0x280>
 cd4:	60 81       	ld	r22, Z
 cd6:	71 81       	ldd	r23, Z+1	; 0x01
 cd8:	80 e0       	ldi	r24, 0x00	; 0
 cda:	90 e0       	ldi	r25, 0x00	; 0
 cdc:	0e 5f       	subi	r16, 0xFE	; 254
 cde:	1f 4f       	sbci	r17, 0xFF	; 255
 ce0:	a4 01       	movw	r20, r8
 ce2:	0e 94 4a 07 	call	0xe94	; 0xe94 <__ultoa_invert>
 ce6:	a8 2e       	mov	r10, r24
 ce8:	a8 18       	sub	r10, r8
 cea:	fb 2d       	mov	r31, r11
 cec:	ff 77       	andi	r31, 0x7F	; 127
 cee:	bf 2e       	mov	r11, r31
 cf0:	b6 fe       	sbrs	r11, 6
 cf2:	0b c0       	rjmp	.+22     	; 0xd0a <vfprintf+0x2aa>
 cf4:	2b 2d       	mov	r18, r11
 cf6:	2e 7f       	andi	r18, 0xFE	; 254
 cf8:	a5 14       	cp	r10, r5
 cfa:	50 f4       	brcc	.+20     	; 0xd10 <vfprintf+0x2b0>
 cfc:	b4 fe       	sbrs	r11, 4
 cfe:	0a c0       	rjmp	.+20     	; 0xd14 <vfprintf+0x2b4>
 d00:	b2 fc       	sbrc	r11, 2
 d02:	08 c0       	rjmp	.+16     	; 0xd14 <vfprintf+0x2b4>
 d04:	2b 2d       	mov	r18, r11
 d06:	2e 7e       	andi	r18, 0xEE	; 238
 d08:	05 c0       	rjmp	.+10     	; 0xd14 <vfprintf+0x2b4>
 d0a:	7a 2c       	mov	r7, r10
 d0c:	2b 2d       	mov	r18, r11
 d0e:	03 c0       	rjmp	.+6      	; 0xd16 <vfprintf+0x2b6>
 d10:	7a 2c       	mov	r7, r10
 d12:	01 c0       	rjmp	.+2      	; 0xd16 <vfprintf+0x2b6>
 d14:	75 2c       	mov	r7, r5
 d16:	24 ff       	sbrs	r18, 4
 d18:	0d c0       	rjmp	.+26     	; 0xd34 <vfprintf+0x2d4>
 d1a:	fe 01       	movw	r30, r28
 d1c:	ea 0d       	add	r30, r10
 d1e:	f1 1d       	adc	r31, r1
 d20:	80 81       	ld	r24, Z
 d22:	80 33       	cpi	r24, 0x30	; 48
 d24:	11 f4       	brne	.+4      	; 0xd2a <vfprintf+0x2ca>
 d26:	29 7e       	andi	r18, 0xE9	; 233
 d28:	09 c0       	rjmp	.+18     	; 0xd3c <vfprintf+0x2dc>
 d2a:	22 ff       	sbrs	r18, 2
 d2c:	06 c0       	rjmp	.+12     	; 0xd3a <vfprintf+0x2da>
 d2e:	73 94       	inc	r7
 d30:	73 94       	inc	r7
 d32:	04 c0       	rjmp	.+8      	; 0xd3c <vfprintf+0x2dc>
 d34:	82 2f       	mov	r24, r18
 d36:	86 78       	andi	r24, 0x86	; 134
 d38:	09 f0       	breq	.+2      	; 0xd3c <vfprintf+0x2dc>
 d3a:	73 94       	inc	r7
 d3c:	23 fd       	sbrc	r18, 3
 d3e:	13 c0       	rjmp	.+38     	; 0xd66 <vfprintf+0x306>
 d40:	20 ff       	sbrs	r18, 0
 d42:	06 c0       	rjmp	.+12     	; 0xd50 <vfprintf+0x2f0>
 d44:	5a 2c       	mov	r5, r10
 d46:	73 14       	cp	r7, r3
 d48:	18 f4       	brcc	.+6      	; 0xd50 <vfprintf+0x2f0>
 d4a:	53 0c       	add	r5, r3
 d4c:	57 18       	sub	r5, r7
 d4e:	73 2c       	mov	r7, r3
 d50:	73 14       	cp	r7, r3
 d52:	68 f4       	brcc	.+26     	; 0xd6e <vfprintf+0x30e>
 d54:	b7 01       	movw	r22, r14
 d56:	80 e2       	ldi	r24, 0x20	; 32
 d58:	90 e0       	ldi	r25, 0x00	; 0
 d5a:	2c 87       	std	Y+12, r18	; 0x0c
 d5c:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 d60:	73 94       	inc	r7
 d62:	2c 85       	ldd	r18, Y+12	; 0x0c
 d64:	f5 cf       	rjmp	.-22     	; 0xd50 <vfprintf+0x2f0>
 d66:	73 14       	cp	r7, r3
 d68:	10 f4       	brcc	.+4      	; 0xd6e <vfprintf+0x30e>
 d6a:	37 18       	sub	r3, r7
 d6c:	01 c0       	rjmp	.+2      	; 0xd70 <vfprintf+0x310>
 d6e:	31 2c       	mov	r3, r1
 d70:	24 ff       	sbrs	r18, 4
 d72:	12 c0       	rjmp	.+36     	; 0xd98 <vfprintf+0x338>
 d74:	b7 01       	movw	r22, r14
 d76:	80 e3       	ldi	r24, 0x30	; 48
 d78:	90 e0       	ldi	r25, 0x00	; 0
 d7a:	2c 87       	std	Y+12, r18	; 0x0c
 d7c:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 d80:	2c 85       	ldd	r18, Y+12	; 0x0c
 d82:	22 ff       	sbrs	r18, 2
 d84:	17 c0       	rjmp	.+46     	; 0xdb4 <vfprintf+0x354>
 d86:	21 ff       	sbrs	r18, 1
 d88:	03 c0       	rjmp	.+6      	; 0xd90 <vfprintf+0x330>
 d8a:	88 e5       	ldi	r24, 0x58	; 88
 d8c:	90 e0       	ldi	r25, 0x00	; 0
 d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x334>
 d90:	88 e7       	ldi	r24, 0x78	; 120
 d92:	90 e0       	ldi	r25, 0x00	; 0
 d94:	b7 01       	movw	r22, r14
 d96:	0c c0       	rjmp	.+24     	; 0xdb0 <vfprintf+0x350>
 d98:	82 2f       	mov	r24, r18
 d9a:	86 78       	andi	r24, 0x86	; 134
 d9c:	59 f0       	breq	.+22     	; 0xdb4 <vfprintf+0x354>
 d9e:	21 fd       	sbrc	r18, 1
 da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0x346>
 da2:	80 e2       	ldi	r24, 0x20	; 32
 da4:	01 c0       	rjmp	.+2      	; 0xda8 <vfprintf+0x348>
 da6:	8b e2       	ldi	r24, 0x2B	; 43
 da8:	27 fd       	sbrc	r18, 7
 daa:	8d e2       	ldi	r24, 0x2D	; 45
 dac:	b7 01       	movw	r22, r14
 dae:	90 e0       	ldi	r25, 0x00	; 0
 db0:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 db4:	a5 14       	cp	r10, r5
 db6:	38 f4       	brcc	.+14     	; 0xdc6 <vfprintf+0x366>
 db8:	b7 01       	movw	r22, r14
 dba:	80 e3       	ldi	r24, 0x30	; 48
 dbc:	90 e0       	ldi	r25, 0x00	; 0
 dbe:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 dc2:	5a 94       	dec	r5
 dc4:	f7 cf       	rjmp	.-18     	; 0xdb4 <vfprintf+0x354>
 dc6:	aa 94       	dec	r10
 dc8:	f4 01       	movw	r30, r8
 dca:	ea 0d       	add	r30, r10
 dcc:	f1 1d       	adc	r31, r1
 dce:	80 81       	ld	r24, Z
 dd0:	b7 01       	movw	r22, r14
 dd2:	90 e0       	ldi	r25, 0x00	; 0
 dd4:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 dd8:	a1 10       	cpse	r10, r1
 dda:	f5 cf       	rjmp	.-22     	; 0xdc6 <vfprintf+0x366>
 ddc:	33 20       	and	r3, r3
 dde:	09 f4       	brne	.+2      	; 0xde2 <vfprintf+0x382>
 de0:	51 ce       	rjmp	.-862    	; 0xa84 <vfprintf+0x24>
 de2:	b7 01       	movw	r22, r14
 de4:	80 e2       	ldi	r24, 0x20	; 32
 de6:	90 e0       	ldi	r25, 0x00	; 0
 de8:	0e 94 18 07 	call	0xe30	; 0xe30 <fputc>
 dec:	3a 94       	dec	r3
 dee:	f6 cf       	rjmp	.-20     	; 0xddc <vfprintf+0x37c>
 df0:	f7 01       	movw	r30, r14
 df2:	86 81       	ldd	r24, Z+6	; 0x06
 df4:	97 81       	ldd	r25, Z+7	; 0x07
 df6:	02 c0       	rjmp	.+4      	; 0xdfc <vfprintf+0x39c>
 df8:	8f ef       	ldi	r24, 0xFF	; 255
 dfa:	9f ef       	ldi	r25, 0xFF	; 255
 dfc:	2c 96       	adiw	r28, 0x0c	; 12
 dfe:	e2 e1       	ldi	r30, 0x12	; 18
 e00:	0c 94 c4 07 	jmp	0xf88	; 0xf88 <__epilogue_restores__>

00000e04 <strnlen_P>:
 e04:	fc 01       	movw	r30, r24
 e06:	05 90       	lpm	r0, Z+
 e08:	61 50       	subi	r22, 0x01	; 1
 e0a:	70 40       	sbci	r23, 0x00	; 0
 e0c:	01 10       	cpse	r0, r1
 e0e:	d8 f7       	brcc	.-10     	; 0xe06 <strnlen_P+0x2>
 e10:	80 95       	com	r24
 e12:	90 95       	com	r25
 e14:	8e 0f       	add	r24, r30
 e16:	9f 1f       	adc	r25, r31
 e18:	08 95       	ret

00000e1a <strnlen>:
 e1a:	fc 01       	movw	r30, r24
 e1c:	61 50       	subi	r22, 0x01	; 1
 e1e:	70 40       	sbci	r23, 0x00	; 0
 e20:	01 90       	ld	r0, Z+
 e22:	01 10       	cpse	r0, r1
 e24:	d8 f7       	brcc	.-10     	; 0xe1c <strnlen+0x2>
 e26:	80 95       	com	r24
 e28:	90 95       	com	r25
 e2a:	8e 0f       	add	r24, r30
 e2c:	9f 1f       	adc	r25, r31
 e2e:	08 95       	ret

00000e30 <fputc>:
 e30:	0f 93       	push	r16
 e32:	1f 93       	push	r17
 e34:	cf 93       	push	r28
 e36:	df 93       	push	r29
 e38:	18 2f       	mov	r17, r24
 e3a:	09 2f       	mov	r16, r25
 e3c:	eb 01       	movw	r28, r22
 e3e:	8b 81       	ldd	r24, Y+3	; 0x03
 e40:	81 fd       	sbrc	r24, 1
 e42:	03 c0       	rjmp	.+6      	; 0xe4a <fputc+0x1a>
 e44:	8f ef       	ldi	r24, 0xFF	; 255
 e46:	9f ef       	ldi	r25, 0xFF	; 255
 e48:	20 c0       	rjmp	.+64     	; 0xe8a <fputc+0x5a>
 e4a:	82 ff       	sbrs	r24, 2
 e4c:	10 c0       	rjmp	.+32     	; 0xe6e <fputc+0x3e>
 e4e:	4e 81       	ldd	r20, Y+6	; 0x06
 e50:	5f 81       	ldd	r21, Y+7	; 0x07
 e52:	2c 81       	ldd	r18, Y+4	; 0x04
 e54:	3d 81       	ldd	r19, Y+5	; 0x05
 e56:	42 17       	cp	r20, r18
 e58:	53 07       	cpc	r21, r19
 e5a:	7c f4       	brge	.+30     	; 0xe7a <fputc+0x4a>
 e5c:	e8 81       	ld	r30, Y
 e5e:	f9 81       	ldd	r31, Y+1	; 0x01
 e60:	9f 01       	movw	r18, r30
 e62:	2f 5f       	subi	r18, 0xFF	; 255
 e64:	3f 4f       	sbci	r19, 0xFF	; 255
 e66:	39 83       	std	Y+1, r19	; 0x01
 e68:	28 83       	st	Y, r18
 e6a:	10 83       	st	Z, r17
 e6c:	06 c0       	rjmp	.+12     	; 0xe7a <fputc+0x4a>
 e6e:	e8 85       	ldd	r30, Y+8	; 0x08
 e70:	f9 85       	ldd	r31, Y+9	; 0x09
 e72:	81 2f       	mov	r24, r17
 e74:	09 95       	icall
 e76:	89 2b       	or	r24, r25
 e78:	29 f7       	brne	.-54     	; 0xe44 <fputc+0x14>
 e7a:	2e 81       	ldd	r18, Y+6	; 0x06
 e7c:	3f 81       	ldd	r19, Y+7	; 0x07
 e7e:	2f 5f       	subi	r18, 0xFF	; 255
 e80:	3f 4f       	sbci	r19, 0xFF	; 255
 e82:	3f 83       	std	Y+7, r19	; 0x07
 e84:	2e 83       	std	Y+6, r18	; 0x06
 e86:	81 2f       	mov	r24, r17
 e88:	90 2f       	mov	r25, r16
 e8a:	df 91       	pop	r29
 e8c:	cf 91       	pop	r28
 e8e:	1f 91       	pop	r17
 e90:	0f 91       	pop	r16
 e92:	08 95       	ret

00000e94 <__ultoa_invert>:
 e94:	fa 01       	movw	r30, r20
 e96:	aa 27       	eor	r26, r26
 e98:	28 30       	cpi	r18, 0x08	; 8
 e9a:	51 f1       	breq	.+84     	; 0xef0 <__ultoa_invert+0x5c>
 e9c:	20 31       	cpi	r18, 0x10	; 16
 e9e:	81 f1       	breq	.+96     	; 0xf00 <__ultoa_invert+0x6c>
 ea0:	e8 94       	clt
 ea2:	6f 93       	push	r22
 ea4:	6e 7f       	andi	r22, 0xFE	; 254
 ea6:	6e 5f       	subi	r22, 0xFE	; 254
 ea8:	7f 4f       	sbci	r23, 0xFF	; 255
 eaa:	8f 4f       	sbci	r24, 0xFF	; 255
 eac:	9f 4f       	sbci	r25, 0xFF	; 255
 eae:	af 4f       	sbci	r26, 0xFF	; 255
 eb0:	b1 e0       	ldi	r27, 0x01	; 1
 eb2:	3e d0       	rcall	.+124    	; 0xf30 <__ultoa_invert+0x9c>
 eb4:	b4 e0       	ldi	r27, 0x04	; 4
 eb6:	3c d0       	rcall	.+120    	; 0xf30 <__ultoa_invert+0x9c>
 eb8:	67 0f       	add	r22, r23
 eba:	78 1f       	adc	r23, r24
 ebc:	89 1f       	adc	r24, r25
 ebe:	9a 1f       	adc	r25, r26
 ec0:	a1 1d       	adc	r26, r1
 ec2:	68 0f       	add	r22, r24
 ec4:	79 1f       	adc	r23, r25
 ec6:	8a 1f       	adc	r24, r26
 ec8:	91 1d       	adc	r25, r1
 eca:	a1 1d       	adc	r26, r1
 ecc:	6a 0f       	add	r22, r26
 ece:	71 1d       	adc	r23, r1
 ed0:	81 1d       	adc	r24, r1
 ed2:	91 1d       	adc	r25, r1
 ed4:	a1 1d       	adc	r26, r1
 ed6:	20 d0       	rcall	.+64     	; 0xf18 <__ultoa_invert+0x84>
 ed8:	09 f4       	brne	.+2      	; 0xedc <__ultoa_invert+0x48>
 eda:	68 94       	set
 edc:	3f 91       	pop	r19
 ede:	2a e0       	ldi	r18, 0x0A	; 10
 ee0:	26 9f       	mul	r18, r22
 ee2:	11 24       	eor	r1, r1
 ee4:	30 19       	sub	r19, r0
 ee6:	30 5d       	subi	r19, 0xD0	; 208
 ee8:	31 93       	st	Z+, r19
 eea:	de f6       	brtc	.-74     	; 0xea2 <__ultoa_invert+0xe>
 eec:	cf 01       	movw	r24, r30
 eee:	08 95       	ret
 ef0:	46 2f       	mov	r20, r22
 ef2:	47 70       	andi	r20, 0x07	; 7
 ef4:	40 5d       	subi	r20, 0xD0	; 208
 ef6:	41 93       	st	Z+, r20
 ef8:	b3 e0       	ldi	r27, 0x03	; 3
 efa:	0f d0       	rcall	.+30     	; 0xf1a <__ultoa_invert+0x86>
 efc:	c9 f7       	brne	.-14     	; 0xef0 <__ultoa_invert+0x5c>
 efe:	f6 cf       	rjmp	.-20     	; 0xeec <__ultoa_invert+0x58>
 f00:	46 2f       	mov	r20, r22
 f02:	4f 70       	andi	r20, 0x0F	; 15
 f04:	40 5d       	subi	r20, 0xD0	; 208
 f06:	4a 33       	cpi	r20, 0x3A	; 58
 f08:	18 f0       	brcs	.+6      	; 0xf10 <__ultoa_invert+0x7c>
 f0a:	49 5d       	subi	r20, 0xD9	; 217
 f0c:	31 fd       	sbrc	r19, 1
 f0e:	40 52       	subi	r20, 0x20	; 32
 f10:	41 93       	st	Z+, r20
 f12:	02 d0       	rcall	.+4      	; 0xf18 <__ultoa_invert+0x84>
 f14:	a9 f7       	brne	.-22     	; 0xf00 <__ultoa_invert+0x6c>
 f16:	ea cf       	rjmp	.-44     	; 0xeec <__ultoa_invert+0x58>
 f18:	b4 e0       	ldi	r27, 0x04	; 4
 f1a:	a6 95       	lsr	r26
 f1c:	97 95       	ror	r25
 f1e:	87 95       	ror	r24
 f20:	77 95       	ror	r23
 f22:	67 95       	ror	r22
 f24:	ba 95       	dec	r27
 f26:	c9 f7       	brne	.-14     	; 0xf1a <__ultoa_invert+0x86>
 f28:	00 97       	sbiw	r24, 0x00	; 0
 f2a:	61 05       	cpc	r22, r1
 f2c:	71 05       	cpc	r23, r1
 f2e:	08 95       	ret
 f30:	9b 01       	movw	r18, r22
 f32:	ac 01       	movw	r20, r24
 f34:	0a 2e       	mov	r0, r26
 f36:	06 94       	lsr	r0
 f38:	57 95       	ror	r21
 f3a:	47 95       	ror	r20
 f3c:	37 95       	ror	r19
 f3e:	27 95       	ror	r18
 f40:	ba 95       	dec	r27
 f42:	c9 f7       	brne	.-14     	; 0xf36 <__ultoa_invert+0xa2>
 f44:	62 0f       	add	r22, r18
 f46:	73 1f       	adc	r23, r19
 f48:	84 1f       	adc	r24, r20
 f4a:	95 1f       	adc	r25, r21
 f4c:	a0 1d       	adc	r26, r0
 f4e:	08 95       	ret

00000f50 <__prologue_saves__>:
 f50:	2f 92       	push	r2
 f52:	3f 92       	push	r3
 f54:	4f 92       	push	r4
 f56:	5f 92       	push	r5
 f58:	6f 92       	push	r6
 f5a:	7f 92       	push	r7
 f5c:	8f 92       	push	r8
 f5e:	9f 92       	push	r9
 f60:	af 92       	push	r10
 f62:	bf 92       	push	r11
 f64:	cf 92       	push	r12
 f66:	df 92       	push	r13
 f68:	ef 92       	push	r14
 f6a:	ff 92       	push	r15
 f6c:	0f 93       	push	r16
 f6e:	1f 93       	push	r17
 f70:	cf 93       	push	r28
 f72:	df 93       	push	r29
 f74:	cd b7       	in	r28, 0x3d	; 61
 f76:	de b7       	in	r29, 0x3e	; 62
 f78:	ca 1b       	sub	r28, r26
 f7a:	db 0b       	sbc	r29, r27
 f7c:	0f b6       	in	r0, 0x3f	; 63
 f7e:	f8 94       	cli
 f80:	de bf       	out	0x3e, r29	; 62
 f82:	0f be       	out	0x3f, r0	; 63
 f84:	cd bf       	out	0x3d, r28	; 61
 f86:	09 94       	ijmp

00000f88 <__epilogue_restores__>:
 f88:	2a 88       	ldd	r2, Y+18	; 0x12
 f8a:	39 88       	ldd	r3, Y+17	; 0x11
 f8c:	48 88       	ldd	r4, Y+16	; 0x10
 f8e:	5f 84       	ldd	r5, Y+15	; 0x0f
 f90:	6e 84       	ldd	r6, Y+14	; 0x0e
 f92:	7d 84       	ldd	r7, Y+13	; 0x0d
 f94:	8c 84       	ldd	r8, Y+12	; 0x0c
 f96:	9b 84       	ldd	r9, Y+11	; 0x0b
 f98:	aa 84       	ldd	r10, Y+10	; 0x0a
 f9a:	b9 84       	ldd	r11, Y+9	; 0x09
 f9c:	c8 84       	ldd	r12, Y+8	; 0x08
 f9e:	df 80       	ldd	r13, Y+7	; 0x07
 fa0:	ee 80       	ldd	r14, Y+6	; 0x06
 fa2:	fd 80       	ldd	r15, Y+5	; 0x05
 fa4:	0c 81       	ldd	r16, Y+4	; 0x04
 fa6:	1b 81       	ldd	r17, Y+3	; 0x03
 fa8:	aa 81       	ldd	r26, Y+2	; 0x02
 faa:	b9 81       	ldd	r27, Y+1	; 0x01
 fac:	ce 0f       	add	r28, r30
 fae:	d1 1d       	adc	r29, r1
 fb0:	0f b6       	in	r0, 0x3f	; 63
 fb2:	f8 94       	cli
 fb4:	de bf       	out	0x3e, r29	; 62
 fb6:	0f be       	out	0x3f, r0	; 63
 fb8:	cd bf       	out	0x3d, r28	; 61
 fba:	ed 01       	movw	r28, r26
 fbc:	08 95       	ret

00000fbe <_exit>:
 fbe:	f8 94       	cli

00000fc0 <__stop_program>:
 fc0:	ff cf       	rjmp	.-2      	; 0xfc0 <__stop_program>
